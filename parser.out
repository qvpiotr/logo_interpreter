Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement_list
Rule 1     statement_list -> statement_list statement
Rule 2     statement_list -> statement
Rule 3     statement -> instruction
Rule 4     statement -> repeat_statement
Rule 5     statement -> if_statement
Rule 6     statement -> ifelse_statement
Rule 7     statement -> while_statement
Rule 8     statement -> dowhile_statement
Rule 9     statement -> variable_declaration
Rule 10    statement -> procedure_definition
Rule 11    statement -> procedure_call
Rule 12    statement -> print_statement
Rule 13    instruction -> SETXY LBR expression COMMA expression RBR
Rule 14    instruction -> FORWARD expression
Rule 15    instruction -> BACK expression
Rule 16    instruction -> RIGHT expression
Rule 17    instruction -> LEFT expression
Rule 18    instruction -> SETX expression
Rule 19    instruction -> SETY expression
Rule 20    instruction -> SETH expression
Rule 21    instruction -> SPEED expression
Rule 22    instruction -> SETPS expression
Rule 23    instruction -> SETPC word
Rule 24    instruction -> SETBC word
Rule 25    instruction -> PENUP
Rule 26    instruction -> PENDOWN
Rule 27    instruction -> SHOW
Rule 28    instruction -> HIDE
Rule 29    instruction -> HOME
Rule 30    instruction -> CLEAN
Rule 31    instruction -> RESET
Rule 32    repeat_statement -> REPEAT expression LBR statement_list RBR
Rule 33    if_statement -> IF condition LBR statement_list RBR
Rule 34    ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR
Rule 35    while_statement -> WHILE condition LBR statement_list RBR
Rule 36    dowhile_statement -> DO LBR statement_list RBR WHILE condition
Rule 37    variable_declaration -> MAKE word expression
Rule 38    procedure_definition -> TO STRING LBR parameter_list RBR statement_list END
Rule 39    parameter_list -> parameter_list COMMA parameter
Rule 40    parameter_list -> parameter
Rule 41    parameter -> name
Rule 42    parameter -> empty
Rule 43    procedure_call -> STRING LBR expression_list RBR
Rule 44    expression_list -> expression_list COMMA expression
Rule 45    expression_list -> expression
Rule 46    expression_list -> empty
Rule 47    print_statement -> PRINT word
Rule 48    print_statement -> PRINT expression
Rule 49    expression -> INT
Rule 50    expression -> FLOAT
Rule 51    expression -> name
Rule 52    expression -> REPCOUNT
Rule 53    expression -> LPAR expression RPAR
Rule 54    expression -> MINUS expression
Rule 55    expression -> RANDOM expression
Rule 56    expression -> expression TIMES expression
Rule 57    expression -> expression DIVIDE expression
Rule 58    expression -> expression PLUS expression
Rule 59    expression -> expression MINUS expression
Rule 60    expression -> expression POWER expression
Rule 61    condition -> TRUE
Rule 62    condition -> FALSE
Rule 63    condition -> expression GT expression
Rule 64    condition -> expression LT expression
Rule 65    condition -> expression GTE expression
Rule 66    condition -> expression LTE expression
Rule 67    condition -> expression EQUALS expression
Rule 68    condition -> expression NE expression
Rule 69    word -> QUOTE STRING
Rule 70    name -> COLON STRING
Rule 71    empty -> <empty>

Terminals, with rules where they appear

BACK                 : 15
CLEAN                : 30
COLON                : 70
COMMA                : 13 39 44
DIVIDE               : 57
DO                   : 36
END                  : 38
EQUALS               : 67
FALSE                : 62
FLOAT                : 50
FORWARD              : 14
GT                   : 63
GTE                  : 65
HIDE                 : 28
HOME                 : 29
IF                   : 33
IFELSE               : 34
INT                  : 49
LBR                  : 13 32 33 34 34 35 36 38 43
LEFT                 : 17
LPAR                 : 53
LT                   : 64
LTE                  : 66
MAKE                 : 37
MINUS                : 54 59
NE                   : 68
PENDOWN              : 26
PENUP                : 25
PLUS                 : 58
POWER                : 60
PRINT                : 47 48
QUOTE                : 69
RANDOM               : 55
RBR                  : 13 32 33 34 34 35 36 38 43
REPCOUNT             : 52
REPEAT               : 32
RESET                : 31
RIGHT                : 16
RPAR                 : 53
SETBC                : 24
SETH                 : 20
SETPC                : 23
SETPS                : 22
SETX                 : 18
SETXY                : 13
SETY                 : 19
SHOW                 : 27
SPEED                : 21
STRING               : 38 43 69 70
TIMES                : 56
TO                   : 38
TRUE                 : 61
WHILE                : 35 36
error                : 

Nonterminals, with rules where they appear

condition            : 33 34 35 36
dowhile_statement    : 8
empty                : 42 46
expression           : 13 13 14 15 16 17 18 19 20 21 22 32 37 44 45 48 53 54 55 56 56 57 57 58 58 59 59 60 60 63 63 64 64 65 65 66 66 67 67 68 68
expression_list      : 43 44
if_statement         : 5
ifelse_statement     : 6
instruction          : 3
name                 : 41 51
parameter            : 39 40
parameter_list       : 38 39
print_statement      : 12
procedure_call       : 11
procedure_definition : 10
repeat_statement     : 4
statement            : 1 2
statement_list       : 1 32 33 34 34 35 36 38 0
variable_declaration : 9
while_statement      : 7
word                 : 23 24 37 47

Parsing method: LALR

state 0

    (0) S' -> . statement_list
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 1
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 1

    (0) S' -> statement_list .
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 2

    (2) statement_list -> statement .

    SETXY           reduce using rule 2 (statement_list -> statement .)
    FORWARD         reduce using rule 2 (statement_list -> statement .)
    BACK            reduce using rule 2 (statement_list -> statement .)
    RIGHT           reduce using rule 2 (statement_list -> statement .)
    LEFT            reduce using rule 2 (statement_list -> statement .)
    SETX            reduce using rule 2 (statement_list -> statement .)
    SETY            reduce using rule 2 (statement_list -> statement .)
    SETH            reduce using rule 2 (statement_list -> statement .)
    SPEED           reduce using rule 2 (statement_list -> statement .)
    SETPS           reduce using rule 2 (statement_list -> statement .)
    SETPC           reduce using rule 2 (statement_list -> statement .)
    SETBC           reduce using rule 2 (statement_list -> statement .)
    PENUP           reduce using rule 2 (statement_list -> statement .)
    PENDOWN         reduce using rule 2 (statement_list -> statement .)
    SHOW            reduce using rule 2 (statement_list -> statement .)
    HIDE            reduce using rule 2 (statement_list -> statement .)
    HOME            reduce using rule 2 (statement_list -> statement .)
    CLEAN           reduce using rule 2 (statement_list -> statement .)
    RESET           reduce using rule 2 (statement_list -> statement .)
    REPEAT          reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    IFELSE          reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    DO              reduce using rule 2 (statement_list -> statement .)
    MAKE            reduce using rule 2 (statement_list -> statement .)
    TO              reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBR             reduce using rule 2 (statement_list -> statement .)
    END             reduce using rule 2 (statement_list -> statement .)


state 3

    (3) statement -> instruction .

    SETXY           reduce using rule 3 (statement -> instruction .)
    FORWARD         reduce using rule 3 (statement -> instruction .)
    BACK            reduce using rule 3 (statement -> instruction .)
    RIGHT           reduce using rule 3 (statement -> instruction .)
    LEFT            reduce using rule 3 (statement -> instruction .)
    SETX            reduce using rule 3 (statement -> instruction .)
    SETY            reduce using rule 3 (statement -> instruction .)
    SETH            reduce using rule 3 (statement -> instruction .)
    SPEED           reduce using rule 3 (statement -> instruction .)
    SETPS           reduce using rule 3 (statement -> instruction .)
    SETPC           reduce using rule 3 (statement -> instruction .)
    SETBC           reduce using rule 3 (statement -> instruction .)
    PENUP           reduce using rule 3 (statement -> instruction .)
    PENDOWN         reduce using rule 3 (statement -> instruction .)
    SHOW            reduce using rule 3 (statement -> instruction .)
    HIDE            reduce using rule 3 (statement -> instruction .)
    HOME            reduce using rule 3 (statement -> instruction .)
    CLEAN           reduce using rule 3 (statement -> instruction .)
    RESET           reduce using rule 3 (statement -> instruction .)
    REPEAT          reduce using rule 3 (statement -> instruction .)
    IF              reduce using rule 3 (statement -> instruction .)
    IFELSE          reduce using rule 3 (statement -> instruction .)
    WHILE           reduce using rule 3 (statement -> instruction .)
    DO              reduce using rule 3 (statement -> instruction .)
    MAKE            reduce using rule 3 (statement -> instruction .)
    TO              reduce using rule 3 (statement -> instruction .)
    STRING          reduce using rule 3 (statement -> instruction .)
    PRINT           reduce using rule 3 (statement -> instruction .)
    $end            reduce using rule 3 (statement -> instruction .)
    RBR             reduce using rule 3 (statement -> instruction .)
    END             reduce using rule 3 (statement -> instruction .)


state 4

    (4) statement -> repeat_statement .

    SETXY           reduce using rule 4 (statement -> repeat_statement .)
    FORWARD         reduce using rule 4 (statement -> repeat_statement .)
    BACK            reduce using rule 4 (statement -> repeat_statement .)
    RIGHT           reduce using rule 4 (statement -> repeat_statement .)
    LEFT            reduce using rule 4 (statement -> repeat_statement .)
    SETX            reduce using rule 4 (statement -> repeat_statement .)
    SETY            reduce using rule 4 (statement -> repeat_statement .)
    SETH            reduce using rule 4 (statement -> repeat_statement .)
    SPEED           reduce using rule 4 (statement -> repeat_statement .)
    SETPS           reduce using rule 4 (statement -> repeat_statement .)
    SETPC           reduce using rule 4 (statement -> repeat_statement .)
    SETBC           reduce using rule 4 (statement -> repeat_statement .)
    PENUP           reduce using rule 4 (statement -> repeat_statement .)
    PENDOWN         reduce using rule 4 (statement -> repeat_statement .)
    SHOW            reduce using rule 4 (statement -> repeat_statement .)
    HIDE            reduce using rule 4 (statement -> repeat_statement .)
    HOME            reduce using rule 4 (statement -> repeat_statement .)
    CLEAN           reduce using rule 4 (statement -> repeat_statement .)
    RESET           reduce using rule 4 (statement -> repeat_statement .)
    REPEAT          reduce using rule 4 (statement -> repeat_statement .)
    IF              reduce using rule 4 (statement -> repeat_statement .)
    IFELSE          reduce using rule 4 (statement -> repeat_statement .)
    WHILE           reduce using rule 4 (statement -> repeat_statement .)
    DO              reduce using rule 4 (statement -> repeat_statement .)
    MAKE            reduce using rule 4 (statement -> repeat_statement .)
    TO              reduce using rule 4 (statement -> repeat_statement .)
    STRING          reduce using rule 4 (statement -> repeat_statement .)
    PRINT           reduce using rule 4 (statement -> repeat_statement .)
    $end            reduce using rule 4 (statement -> repeat_statement .)
    RBR             reduce using rule 4 (statement -> repeat_statement .)
    END             reduce using rule 4 (statement -> repeat_statement .)


state 5

    (5) statement -> if_statement .

    SETXY           reduce using rule 5 (statement -> if_statement .)
    FORWARD         reduce using rule 5 (statement -> if_statement .)
    BACK            reduce using rule 5 (statement -> if_statement .)
    RIGHT           reduce using rule 5 (statement -> if_statement .)
    LEFT            reduce using rule 5 (statement -> if_statement .)
    SETX            reduce using rule 5 (statement -> if_statement .)
    SETY            reduce using rule 5 (statement -> if_statement .)
    SETH            reduce using rule 5 (statement -> if_statement .)
    SPEED           reduce using rule 5 (statement -> if_statement .)
    SETPS           reduce using rule 5 (statement -> if_statement .)
    SETPC           reduce using rule 5 (statement -> if_statement .)
    SETBC           reduce using rule 5 (statement -> if_statement .)
    PENUP           reduce using rule 5 (statement -> if_statement .)
    PENDOWN         reduce using rule 5 (statement -> if_statement .)
    SHOW            reduce using rule 5 (statement -> if_statement .)
    HIDE            reduce using rule 5 (statement -> if_statement .)
    HOME            reduce using rule 5 (statement -> if_statement .)
    CLEAN           reduce using rule 5 (statement -> if_statement .)
    RESET           reduce using rule 5 (statement -> if_statement .)
    REPEAT          reduce using rule 5 (statement -> if_statement .)
    IF              reduce using rule 5 (statement -> if_statement .)
    IFELSE          reduce using rule 5 (statement -> if_statement .)
    WHILE           reduce using rule 5 (statement -> if_statement .)
    DO              reduce using rule 5 (statement -> if_statement .)
    MAKE            reduce using rule 5 (statement -> if_statement .)
    TO              reduce using rule 5 (statement -> if_statement .)
    STRING          reduce using rule 5 (statement -> if_statement .)
    PRINT           reduce using rule 5 (statement -> if_statement .)
    $end            reduce using rule 5 (statement -> if_statement .)
    RBR             reduce using rule 5 (statement -> if_statement .)
    END             reduce using rule 5 (statement -> if_statement .)


state 6

    (6) statement -> ifelse_statement .

    SETXY           reduce using rule 6 (statement -> ifelse_statement .)
    FORWARD         reduce using rule 6 (statement -> ifelse_statement .)
    BACK            reduce using rule 6 (statement -> ifelse_statement .)
    RIGHT           reduce using rule 6 (statement -> ifelse_statement .)
    LEFT            reduce using rule 6 (statement -> ifelse_statement .)
    SETX            reduce using rule 6 (statement -> ifelse_statement .)
    SETY            reduce using rule 6 (statement -> ifelse_statement .)
    SETH            reduce using rule 6 (statement -> ifelse_statement .)
    SPEED           reduce using rule 6 (statement -> ifelse_statement .)
    SETPS           reduce using rule 6 (statement -> ifelse_statement .)
    SETPC           reduce using rule 6 (statement -> ifelse_statement .)
    SETBC           reduce using rule 6 (statement -> ifelse_statement .)
    PENUP           reduce using rule 6 (statement -> ifelse_statement .)
    PENDOWN         reduce using rule 6 (statement -> ifelse_statement .)
    SHOW            reduce using rule 6 (statement -> ifelse_statement .)
    HIDE            reduce using rule 6 (statement -> ifelse_statement .)
    HOME            reduce using rule 6 (statement -> ifelse_statement .)
    CLEAN           reduce using rule 6 (statement -> ifelse_statement .)
    RESET           reduce using rule 6 (statement -> ifelse_statement .)
    REPEAT          reduce using rule 6 (statement -> ifelse_statement .)
    IF              reduce using rule 6 (statement -> ifelse_statement .)
    IFELSE          reduce using rule 6 (statement -> ifelse_statement .)
    WHILE           reduce using rule 6 (statement -> ifelse_statement .)
    DO              reduce using rule 6 (statement -> ifelse_statement .)
    MAKE            reduce using rule 6 (statement -> ifelse_statement .)
    TO              reduce using rule 6 (statement -> ifelse_statement .)
    STRING          reduce using rule 6 (statement -> ifelse_statement .)
    PRINT           reduce using rule 6 (statement -> ifelse_statement .)
    $end            reduce using rule 6 (statement -> ifelse_statement .)
    RBR             reduce using rule 6 (statement -> ifelse_statement .)
    END             reduce using rule 6 (statement -> ifelse_statement .)


state 7

    (7) statement -> while_statement .

    SETXY           reduce using rule 7 (statement -> while_statement .)
    FORWARD         reduce using rule 7 (statement -> while_statement .)
    BACK            reduce using rule 7 (statement -> while_statement .)
    RIGHT           reduce using rule 7 (statement -> while_statement .)
    LEFT            reduce using rule 7 (statement -> while_statement .)
    SETX            reduce using rule 7 (statement -> while_statement .)
    SETY            reduce using rule 7 (statement -> while_statement .)
    SETH            reduce using rule 7 (statement -> while_statement .)
    SPEED           reduce using rule 7 (statement -> while_statement .)
    SETPS           reduce using rule 7 (statement -> while_statement .)
    SETPC           reduce using rule 7 (statement -> while_statement .)
    SETBC           reduce using rule 7 (statement -> while_statement .)
    PENUP           reduce using rule 7 (statement -> while_statement .)
    PENDOWN         reduce using rule 7 (statement -> while_statement .)
    SHOW            reduce using rule 7 (statement -> while_statement .)
    HIDE            reduce using rule 7 (statement -> while_statement .)
    HOME            reduce using rule 7 (statement -> while_statement .)
    CLEAN           reduce using rule 7 (statement -> while_statement .)
    RESET           reduce using rule 7 (statement -> while_statement .)
    REPEAT          reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    IFELSE          reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    DO              reduce using rule 7 (statement -> while_statement .)
    MAKE            reduce using rule 7 (statement -> while_statement .)
    TO              reduce using rule 7 (statement -> while_statement .)
    STRING          reduce using rule 7 (statement -> while_statement .)
    PRINT           reduce using rule 7 (statement -> while_statement .)
    $end            reduce using rule 7 (statement -> while_statement .)
    RBR             reduce using rule 7 (statement -> while_statement .)
    END             reduce using rule 7 (statement -> while_statement .)


state 8

    (8) statement -> dowhile_statement .

    SETXY           reduce using rule 8 (statement -> dowhile_statement .)
    FORWARD         reduce using rule 8 (statement -> dowhile_statement .)
    BACK            reduce using rule 8 (statement -> dowhile_statement .)
    RIGHT           reduce using rule 8 (statement -> dowhile_statement .)
    LEFT            reduce using rule 8 (statement -> dowhile_statement .)
    SETX            reduce using rule 8 (statement -> dowhile_statement .)
    SETY            reduce using rule 8 (statement -> dowhile_statement .)
    SETH            reduce using rule 8 (statement -> dowhile_statement .)
    SPEED           reduce using rule 8 (statement -> dowhile_statement .)
    SETPS           reduce using rule 8 (statement -> dowhile_statement .)
    SETPC           reduce using rule 8 (statement -> dowhile_statement .)
    SETBC           reduce using rule 8 (statement -> dowhile_statement .)
    PENUP           reduce using rule 8 (statement -> dowhile_statement .)
    PENDOWN         reduce using rule 8 (statement -> dowhile_statement .)
    SHOW            reduce using rule 8 (statement -> dowhile_statement .)
    HIDE            reduce using rule 8 (statement -> dowhile_statement .)
    HOME            reduce using rule 8 (statement -> dowhile_statement .)
    CLEAN           reduce using rule 8 (statement -> dowhile_statement .)
    RESET           reduce using rule 8 (statement -> dowhile_statement .)
    REPEAT          reduce using rule 8 (statement -> dowhile_statement .)
    IF              reduce using rule 8 (statement -> dowhile_statement .)
    IFELSE          reduce using rule 8 (statement -> dowhile_statement .)
    WHILE           reduce using rule 8 (statement -> dowhile_statement .)
    DO              reduce using rule 8 (statement -> dowhile_statement .)
    MAKE            reduce using rule 8 (statement -> dowhile_statement .)
    TO              reduce using rule 8 (statement -> dowhile_statement .)
    STRING          reduce using rule 8 (statement -> dowhile_statement .)
    PRINT           reduce using rule 8 (statement -> dowhile_statement .)
    $end            reduce using rule 8 (statement -> dowhile_statement .)
    RBR             reduce using rule 8 (statement -> dowhile_statement .)
    END             reduce using rule 8 (statement -> dowhile_statement .)


state 9

    (9) statement -> variable_declaration .

    SETXY           reduce using rule 9 (statement -> variable_declaration .)
    FORWARD         reduce using rule 9 (statement -> variable_declaration .)
    BACK            reduce using rule 9 (statement -> variable_declaration .)
    RIGHT           reduce using rule 9 (statement -> variable_declaration .)
    LEFT            reduce using rule 9 (statement -> variable_declaration .)
    SETX            reduce using rule 9 (statement -> variable_declaration .)
    SETY            reduce using rule 9 (statement -> variable_declaration .)
    SETH            reduce using rule 9 (statement -> variable_declaration .)
    SPEED           reduce using rule 9 (statement -> variable_declaration .)
    SETPS           reduce using rule 9 (statement -> variable_declaration .)
    SETPC           reduce using rule 9 (statement -> variable_declaration .)
    SETBC           reduce using rule 9 (statement -> variable_declaration .)
    PENUP           reduce using rule 9 (statement -> variable_declaration .)
    PENDOWN         reduce using rule 9 (statement -> variable_declaration .)
    SHOW            reduce using rule 9 (statement -> variable_declaration .)
    HIDE            reduce using rule 9 (statement -> variable_declaration .)
    HOME            reduce using rule 9 (statement -> variable_declaration .)
    CLEAN           reduce using rule 9 (statement -> variable_declaration .)
    RESET           reduce using rule 9 (statement -> variable_declaration .)
    REPEAT          reduce using rule 9 (statement -> variable_declaration .)
    IF              reduce using rule 9 (statement -> variable_declaration .)
    IFELSE          reduce using rule 9 (statement -> variable_declaration .)
    WHILE           reduce using rule 9 (statement -> variable_declaration .)
    DO              reduce using rule 9 (statement -> variable_declaration .)
    MAKE            reduce using rule 9 (statement -> variable_declaration .)
    TO              reduce using rule 9 (statement -> variable_declaration .)
    STRING          reduce using rule 9 (statement -> variable_declaration .)
    PRINT           reduce using rule 9 (statement -> variable_declaration .)
    $end            reduce using rule 9 (statement -> variable_declaration .)
    RBR             reduce using rule 9 (statement -> variable_declaration .)
    END             reduce using rule 9 (statement -> variable_declaration .)


state 10

    (10) statement -> procedure_definition .

    SETXY           reduce using rule 10 (statement -> procedure_definition .)
    FORWARD         reduce using rule 10 (statement -> procedure_definition .)
    BACK            reduce using rule 10 (statement -> procedure_definition .)
    RIGHT           reduce using rule 10 (statement -> procedure_definition .)
    LEFT            reduce using rule 10 (statement -> procedure_definition .)
    SETX            reduce using rule 10 (statement -> procedure_definition .)
    SETY            reduce using rule 10 (statement -> procedure_definition .)
    SETH            reduce using rule 10 (statement -> procedure_definition .)
    SPEED           reduce using rule 10 (statement -> procedure_definition .)
    SETPS           reduce using rule 10 (statement -> procedure_definition .)
    SETPC           reduce using rule 10 (statement -> procedure_definition .)
    SETBC           reduce using rule 10 (statement -> procedure_definition .)
    PENUP           reduce using rule 10 (statement -> procedure_definition .)
    PENDOWN         reduce using rule 10 (statement -> procedure_definition .)
    SHOW            reduce using rule 10 (statement -> procedure_definition .)
    HIDE            reduce using rule 10 (statement -> procedure_definition .)
    HOME            reduce using rule 10 (statement -> procedure_definition .)
    CLEAN           reduce using rule 10 (statement -> procedure_definition .)
    RESET           reduce using rule 10 (statement -> procedure_definition .)
    REPEAT          reduce using rule 10 (statement -> procedure_definition .)
    IF              reduce using rule 10 (statement -> procedure_definition .)
    IFELSE          reduce using rule 10 (statement -> procedure_definition .)
    WHILE           reduce using rule 10 (statement -> procedure_definition .)
    DO              reduce using rule 10 (statement -> procedure_definition .)
    MAKE            reduce using rule 10 (statement -> procedure_definition .)
    TO              reduce using rule 10 (statement -> procedure_definition .)
    STRING          reduce using rule 10 (statement -> procedure_definition .)
    PRINT           reduce using rule 10 (statement -> procedure_definition .)
    $end            reduce using rule 10 (statement -> procedure_definition .)
    RBR             reduce using rule 10 (statement -> procedure_definition .)
    END             reduce using rule 10 (statement -> procedure_definition .)


state 11

    (11) statement -> procedure_call .

    SETXY           reduce using rule 11 (statement -> procedure_call .)
    FORWARD         reduce using rule 11 (statement -> procedure_call .)
    BACK            reduce using rule 11 (statement -> procedure_call .)
    RIGHT           reduce using rule 11 (statement -> procedure_call .)
    LEFT            reduce using rule 11 (statement -> procedure_call .)
    SETX            reduce using rule 11 (statement -> procedure_call .)
    SETY            reduce using rule 11 (statement -> procedure_call .)
    SETH            reduce using rule 11 (statement -> procedure_call .)
    SPEED           reduce using rule 11 (statement -> procedure_call .)
    SETPS           reduce using rule 11 (statement -> procedure_call .)
    SETPC           reduce using rule 11 (statement -> procedure_call .)
    SETBC           reduce using rule 11 (statement -> procedure_call .)
    PENUP           reduce using rule 11 (statement -> procedure_call .)
    PENDOWN         reduce using rule 11 (statement -> procedure_call .)
    SHOW            reduce using rule 11 (statement -> procedure_call .)
    HIDE            reduce using rule 11 (statement -> procedure_call .)
    HOME            reduce using rule 11 (statement -> procedure_call .)
    CLEAN           reduce using rule 11 (statement -> procedure_call .)
    RESET           reduce using rule 11 (statement -> procedure_call .)
    REPEAT          reduce using rule 11 (statement -> procedure_call .)
    IF              reduce using rule 11 (statement -> procedure_call .)
    IFELSE          reduce using rule 11 (statement -> procedure_call .)
    WHILE           reduce using rule 11 (statement -> procedure_call .)
    DO              reduce using rule 11 (statement -> procedure_call .)
    MAKE            reduce using rule 11 (statement -> procedure_call .)
    TO              reduce using rule 11 (statement -> procedure_call .)
    STRING          reduce using rule 11 (statement -> procedure_call .)
    PRINT           reduce using rule 11 (statement -> procedure_call .)
    $end            reduce using rule 11 (statement -> procedure_call .)
    RBR             reduce using rule 11 (statement -> procedure_call .)
    END             reduce using rule 11 (statement -> procedure_call .)


state 12

    (12) statement -> print_statement .

    SETXY           reduce using rule 12 (statement -> print_statement .)
    FORWARD         reduce using rule 12 (statement -> print_statement .)
    BACK            reduce using rule 12 (statement -> print_statement .)
    RIGHT           reduce using rule 12 (statement -> print_statement .)
    LEFT            reduce using rule 12 (statement -> print_statement .)
    SETX            reduce using rule 12 (statement -> print_statement .)
    SETY            reduce using rule 12 (statement -> print_statement .)
    SETH            reduce using rule 12 (statement -> print_statement .)
    SPEED           reduce using rule 12 (statement -> print_statement .)
    SETPS           reduce using rule 12 (statement -> print_statement .)
    SETPC           reduce using rule 12 (statement -> print_statement .)
    SETBC           reduce using rule 12 (statement -> print_statement .)
    PENUP           reduce using rule 12 (statement -> print_statement .)
    PENDOWN         reduce using rule 12 (statement -> print_statement .)
    SHOW            reduce using rule 12 (statement -> print_statement .)
    HIDE            reduce using rule 12 (statement -> print_statement .)
    HOME            reduce using rule 12 (statement -> print_statement .)
    CLEAN           reduce using rule 12 (statement -> print_statement .)
    RESET           reduce using rule 12 (statement -> print_statement .)
    REPEAT          reduce using rule 12 (statement -> print_statement .)
    IF              reduce using rule 12 (statement -> print_statement .)
    IFELSE          reduce using rule 12 (statement -> print_statement .)
    WHILE           reduce using rule 12 (statement -> print_statement .)
    DO              reduce using rule 12 (statement -> print_statement .)
    MAKE            reduce using rule 12 (statement -> print_statement .)
    TO              reduce using rule 12 (statement -> print_statement .)
    STRING          reduce using rule 12 (statement -> print_statement .)
    PRINT           reduce using rule 12 (statement -> print_statement .)
    $end            reduce using rule 12 (statement -> print_statement .)
    RBR             reduce using rule 12 (statement -> print_statement .)
    END             reduce using rule 12 (statement -> print_statement .)


state 13

    (13) instruction -> SETXY . LBR expression COMMA expression RBR

    LBR             shift and go to state 42


state 14

    (14) instruction -> FORWARD . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 43
    name                           shift and go to state 46

state 15

    (15) instruction -> BACK . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 52
    name                           shift and go to state 46

state 16

    (16) instruction -> RIGHT . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 53
    name                           shift and go to state 46

state 17

    (17) instruction -> LEFT . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 54
    name                           shift and go to state 46

state 18

    (18) instruction -> SETX . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 55
    name                           shift and go to state 46

state 19

    (19) instruction -> SETY . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 56
    name                           shift and go to state 46

state 20

    (20) instruction -> SETH . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 57
    name                           shift and go to state 46

state 21

    (21) instruction -> SPEED . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 58
    name                           shift and go to state 46

state 22

    (22) instruction -> SETPS . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 59
    name                           shift and go to state 46

state 23

    (23) instruction -> SETPC . word
    (69) word -> . QUOTE STRING

    QUOTE           shift and go to state 61

    word                           shift and go to state 60

state 24

    (24) instruction -> SETBC . word
    (69) word -> . QUOTE STRING

    QUOTE           shift and go to state 61

    word                           shift and go to state 62

state 25

    (25) instruction -> PENUP .

    SETXY           reduce using rule 25 (instruction -> PENUP .)
    FORWARD         reduce using rule 25 (instruction -> PENUP .)
    BACK            reduce using rule 25 (instruction -> PENUP .)
    RIGHT           reduce using rule 25 (instruction -> PENUP .)
    LEFT            reduce using rule 25 (instruction -> PENUP .)
    SETX            reduce using rule 25 (instruction -> PENUP .)
    SETY            reduce using rule 25 (instruction -> PENUP .)
    SETH            reduce using rule 25 (instruction -> PENUP .)
    SPEED           reduce using rule 25 (instruction -> PENUP .)
    SETPS           reduce using rule 25 (instruction -> PENUP .)
    SETPC           reduce using rule 25 (instruction -> PENUP .)
    SETBC           reduce using rule 25 (instruction -> PENUP .)
    PENUP           reduce using rule 25 (instruction -> PENUP .)
    PENDOWN         reduce using rule 25 (instruction -> PENUP .)
    SHOW            reduce using rule 25 (instruction -> PENUP .)
    HIDE            reduce using rule 25 (instruction -> PENUP .)
    HOME            reduce using rule 25 (instruction -> PENUP .)
    CLEAN           reduce using rule 25 (instruction -> PENUP .)
    RESET           reduce using rule 25 (instruction -> PENUP .)
    REPEAT          reduce using rule 25 (instruction -> PENUP .)
    IF              reduce using rule 25 (instruction -> PENUP .)
    IFELSE          reduce using rule 25 (instruction -> PENUP .)
    WHILE           reduce using rule 25 (instruction -> PENUP .)
    DO              reduce using rule 25 (instruction -> PENUP .)
    MAKE            reduce using rule 25 (instruction -> PENUP .)
    TO              reduce using rule 25 (instruction -> PENUP .)
    STRING          reduce using rule 25 (instruction -> PENUP .)
    PRINT           reduce using rule 25 (instruction -> PENUP .)
    $end            reduce using rule 25 (instruction -> PENUP .)
    RBR             reduce using rule 25 (instruction -> PENUP .)
    END             reduce using rule 25 (instruction -> PENUP .)


state 26

    (26) instruction -> PENDOWN .

    SETXY           reduce using rule 26 (instruction -> PENDOWN .)
    FORWARD         reduce using rule 26 (instruction -> PENDOWN .)
    BACK            reduce using rule 26 (instruction -> PENDOWN .)
    RIGHT           reduce using rule 26 (instruction -> PENDOWN .)
    LEFT            reduce using rule 26 (instruction -> PENDOWN .)
    SETX            reduce using rule 26 (instruction -> PENDOWN .)
    SETY            reduce using rule 26 (instruction -> PENDOWN .)
    SETH            reduce using rule 26 (instruction -> PENDOWN .)
    SPEED           reduce using rule 26 (instruction -> PENDOWN .)
    SETPS           reduce using rule 26 (instruction -> PENDOWN .)
    SETPC           reduce using rule 26 (instruction -> PENDOWN .)
    SETBC           reduce using rule 26 (instruction -> PENDOWN .)
    PENUP           reduce using rule 26 (instruction -> PENDOWN .)
    PENDOWN         reduce using rule 26 (instruction -> PENDOWN .)
    SHOW            reduce using rule 26 (instruction -> PENDOWN .)
    HIDE            reduce using rule 26 (instruction -> PENDOWN .)
    HOME            reduce using rule 26 (instruction -> PENDOWN .)
    CLEAN           reduce using rule 26 (instruction -> PENDOWN .)
    RESET           reduce using rule 26 (instruction -> PENDOWN .)
    REPEAT          reduce using rule 26 (instruction -> PENDOWN .)
    IF              reduce using rule 26 (instruction -> PENDOWN .)
    IFELSE          reduce using rule 26 (instruction -> PENDOWN .)
    WHILE           reduce using rule 26 (instruction -> PENDOWN .)
    DO              reduce using rule 26 (instruction -> PENDOWN .)
    MAKE            reduce using rule 26 (instruction -> PENDOWN .)
    TO              reduce using rule 26 (instruction -> PENDOWN .)
    STRING          reduce using rule 26 (instruction -> PENDOWN .)
    PRINT           reduce using rule 26 (instruction -> PENDOWN .)
    $end            reduce using rule 26 (instruction -> PENDOWN .)
    RBR             reduce using rule 26 (instruction -> PENDOWN .)
    END             reduce using rule 26 (instruction -> PENDOWN .)


state 27

    (27) instruction -> SHOW .

    SETXY           reduce using rule 27 (instruction -> SHOW .)
    FORWARD         reduce using rule 27 (instruction -> SHOW .)
    BACK            reduce using rule 27 (instruction -> SHOW .)
    RIGHT           reduce using rule 27 (instruction -> SHOW .)
    LEFT            reduce using rule 27 (instruction -> SHOW .)
    SETX            reduce using rule 27 (instruction -> SHOW .)
    SETY            reduce using rule 27 (instruction -> SHOW .)
    SETH            reduce using rule 27 (instruction -> SHOW .)
    SPEED           reduce using rule 27 (instruction -> SHOW .)
    SETPS           reduce using rule 27 (instruction -> SHOW .)
    SETPC           reduce using rule 27 (instruction -> SHOW .)
    SETBC           reduce using rule 27 (instruction -> SHOW .)
    PENUP           reduce using rule 27 (instruction -> SHOW .)
    PENDOWN         reduce using rule 27 (instruction -> SHOW .)
    SHOW            reduce using rule 27 (instruction -> SHOW .)
    HIDE            reduce using rule 27 (instruction -> SHOW .)
    HOME            reduce using rule 27 (instruction -> SHOW .)
    CLEAN           reduce using rule 27 (instruction -> SHOW .)
    RESET           reduce using rule 27 (instruction -> SHOW .)
    REPEAT          reduce using rule 27 (instruction -> SHOW .)
    IF              reduce using rule 27 (instruction -> SHOW .)
    IFELSE          reduce using rule 27 (instruction -> SHOW .)
    WHILE           reduce using rule 27 (instruction -> SHOW .)
    DO              reduce using rule 27 (instruction -> SHOW .)
    MAKE            reduce using rule 27 (instruction -> SHOW .)
    TO              reduce using rule 27 (instruction -> SHOW .)
    STRING          reduce using rule 27 (instruction -> SHOW .)
    PRINT           reduce using rule 27 (instruction -> SHOW .)
    $end            reduce using rule 27 (instruction -> SHOW .)
    RBR             reduce using rule 27 (instruction -> SHOW .)
    END             reduce using rule 27 (instruction -> SHOW .)


state 28

    (28) instruction -> HIDE .

    SETXY           reduce using rule 28 (instruction -> HIDE .)
    FORWARD         reduce using rule 28 (instruction -> HIDE .)
    BACK            reduce using rule 28 (instruction -> HIDE .)
    RIGHT           reduce using rule 28 (instruction -> HIDE .)
    LEFT            reduce using rule 28 (instruction -> HIDE .)
    SETX            reduce using rule 28 (instruction -> HIDE .)
    SETY            reduce using rule 28 (instruction -> HIDE .)
    SETH            reduce using rule 28 (instruction -> HIDE .)
    SPEED           reduce using rule 28 (instruction -> HIDE .)
    SETPS           reduce using rule 28 (instruction -> HIDE .)
    SETPC           reduce using rule 28 (instruction -> HIDE .)
    SETBC           reduce using rule 28 (instruction -> HIDE .)
    PENUP           reduce using rule 28 (instruction -> HIDE .)
    PENDOWN         reduce using rule 28 (instruction -> HIDE .)
    SHOW            reduce using rule 28 (instruction -> HIDE .)
    HIDE            reduce using rule 28 (instruction -> HIDE .)
    HOME            reduce using rule 28 (instruction -> HIDE .)
    CLEAN           reduce using rule 28 (instruction -> HIDE .)
    RESET           reduce using rule 28 (instruction -> HIDE .)
    REPEAT          reduce using rule 28 (instruction -> HIDE .)
    IF              reduce using rule 28 (instruction -> HIDE .)
    IFELSE          reduce using rule 28 (instruction -> HIDE .)
    WHILE           reduce using rule 28 (instruction -> HIDE .)
    DO              reduce using rule 28 (instruction -> HIDE .)
    MAKE            reduce using rule 28 (instruction -> HIDE .)
    TO              reduce using rule 28 (instruction -> HIDE .)
    STRING          reduce using rule 28 (instruction -> HIDE .)
    PRINT           reduce using rule 28 (instruction -> HIDE .)
    $end            reduce using rule 28 (instruction -> HIDE .)
    RBR             reduce using rule 28 (instruction -> HIDE .)
    END             reduce using rule 28 (instruction -> HIDE .)


state 29

    (29) instruction -> HOME .

    SETXY           reduce using rule 29 (instruction -> HOME .)
    FORWARD         reduce using rule 29 (instruction -> HOME .)
    BACK            reduce using rule 29 (instruction -> HOME .)
    RIGHT           reduce using rule 29 (instruction -> HOME .)
    LEFT            reduce using rule 29 (instruction -> HOME .)
    SETX            reduce using rule 29 (instruction -> HOME .)
    SETY            reduce using rule 29 (instruction -> HOME .)
    SETH            reduce using rule 29 (instruction -> HOME .)
    SPEED           reduce using rule 29 (instruction -> HOME .)
    SETPS           reduce using rule 29 (instruction -> HOME .)
    SETPC           reduce using rule 29 (instruction -> HOME .)
    SETBC           reduce using rule 29 (instruction -> HOME .)
    PENUP           reduce using rule 29 (instruction -> HOME .)
    PENDOWN         reduce using rule 29 (instruction -> HOME .)
    SHOW            reduce using rule 29 (instruction -> HOME .)
    HIDE            reduce using rule 29 (instruction -> HOME .)
    HOME            reduce using rule 29 (instruction -> HOME .)
    CLEAN           reduce using rule 29 (instruction -> HOME .)
    RESET           reduce using rule 29 (instruction -> HOME .)
    REPEAT          reduce using rule 29 (instruction -> HOME .)
    IF              reduce using rule 29 (instruction -> HOME .)
    IFELSE          reduce using rule 29 (instruction -> HOME .)
    WHILE           reduce using rule 29 (instruction -> HOME .)
    DO              reduce using rule 29 (instruction -> HOME .)
    MAKE            reduce using rule 29 (instruction -> HOME .)
    TO              reduce using rule 29 (instruction -> HOME .)
    STRING          reduce using rule 29 (instruction -> HOME .)
    PRINT           reduce using rule 29 (instruction -> HOME .)
    $end            reduce using rule 29 (instruction -> HOME .)
    RBR             reduce using rule 29 (instruction -> HOME .)
    END             reduce using rule 29 (instruction -> HOME .)


state 30

    (30) instruction -> CLEAN .

    SETXY           reduce using rule 30 (instruction -> CLEAN .)
    FORWARD         reduce using rule 30 (instruction -> CLEAN .)
    BACK            reduce using rule 30 (instruction -> CLEAN .)
    RIGHT           reduce using rule 30 (instruction -> CLEAN .)
    LEFT            reduce using rule 30 (instruction -> CLEAN .)
    SETX            reduce using rule 30 (instruction -> CLEAN .)
    SETY            reduce using rule 30 (instruction -> CLEAN .)
    SETH            reduce using rule 30 (instruction -> CLEAN .)
    SPEED           reduce using rule 30 (instruction -> CLEAN .)
    SETPS           reduce using rule 30 (instruction -> CLEAN .)
    SETPC           reduce using rule 30 (instruction -> CLEAN .)
    SETBC           reduce using rule 30 (instruction -> CLEAN .)
    PENUP           reduce using rule 30 (instruction -> CLEAN .)
    PENDOWN         reduce using rule 30 (instruction -> CLEAN .)
    SHOW            reduce using rule 30 (instruction -> CLEAN .)
    HIDE            reduce using rule 30 (instruction -> CLEAN .)
    HOME            reduce using rule 30 (instruction -> CLEAN .)
    CLEAN           reduce using rule 30 (instruction -> CLEAN .)
    RESET           reduce using rule 30 (instruction -> CLEAN .)
    REPEAT          reduce using rule 30 (instruction -> CLEAN .)
    IF              reduce using rule 30 (instruction -> CLEAN .)
    IFELSE          reduce using rule 30 (instruction -> CLEAN .)
    WHILE           reduce using rule 30 (instruction -> CLEAN .)
    DO              reduce using rule 30 (instruction -> CLEAN .)
    MAKE            reduce using rule 30 (instruction -> CLEAN .)
    TO              reduce using rule 30 (instruction -> CLEAN .)
    STRING          reduce using rule 30 (instruction -> CLEAN .)
    PRINT           reduce using rule 30 (instruction -> CLEAN .)
    $end            reduce using rule 30 (instruction -> CLEAN .)
    RBR             reduce using rule 30 (instruction -> CLEAN .)
    END             reduce using rule 30 (instruction -> CLEAN .)


state 31

    (31) instruction -> RESET .

    SETXY           reduce using rule 31 (instruction -> RESET .)
    FORWARD         reduce using rule 31 (instruction -> RESET .)
    BACK            reduce using rule 31 (instruction -> RESET .)
    RIGHT           reduce using rule 31 (instruction -> RESET .)
    LEFT            reduce using rule 31 (instruction -> RESET .)
    SETX            reduce using rule 31 (instruction -> RESET .)
    SETY            reduce using rule 31 (instruction -> RESET .)
    SETH            reduce using rule 31 (instruction -> RESET .)
    SPEED           reduce using rule 31 (instruction -> RESET .)
    SETPS           reduce using rule 31 (instruction -> RESET .)
    SETPC           reduce using rule 31 (instruction -> RESET .)
    SETBC           reduce using rule 31 (instruction -> RESET .)
    PENUP           reduce using rule 31 (instruction -> RESET .)
    PENDOWN         reduce using rule 31 (instruction -> RESET .)
    SHOW            reduce using rule 31 (instruction -> RESET .)
    HIDE            reduce using rule 31 (instruction -> RESET .)
    HOME            reduce using rule 31 (instruction -> RESET .)
    CLEAN           reduce using rule 31 (instruction -> RESET .)
    RESET           reduce using rule 31 (instruction -> RESET .)
    REPEAT          reduce using rule 31 (instruction -> RESET .)
    IF              reduce using rule 31 (instruction -> RESET .)
    IFELSE          reduce using rule 31 (instruction -> RESET .)
    WHILE           reduce using rule 31 (instruction -> RESET .)
    DO              reduce using rule 31 (instruction -> RESET .)
    MAKE            reduce using rule 31 (instruction -> RESET .)
    TO              reduce using rule 31 (instruction -> RESET .)
    STRING          reduce using rule 31 (instruction -> RESET .)
    PRINT           reduce using rule 31 (instruction -> RESET .)
    $end            reduce using rule 31 (instruction -> RESET .)
    RBR             reduce using rule 31 (instruction -> RESET .)
    END             reduce using rule 31 (instruction -> RESET .)


state 32

    (32) repeat_statement -> REPEAT . expression LBR statement_list RBR
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 63
    name                           shift and go to state 46

state 33

    (33) if_statement -> IF . condition LBR statement_list RBR
    (61) condition -> . TRUE
    (62) condition -> . FALSE
    (63) condition -> . expression GT expression
    (64) condition -> . expression LT expression
    (65) condition -> . expression GTE expression
    (66) condition -> . expression LTE expression
    (67) condition -> . expression EQUALS expression
    (68) condition -> . expression NE expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    condition                      shift and go to state 64
    expression                     shift and go to state 67
    name                           shift and go to state 46

state 34

    (34) ifelse_statement -> IFELSE . condition LBR statement_list RBR LBR statement_list RBR
    (61) condition -> . TRUE
    (62) condition -> . FALSE
    (63) condition -> . expression GT expression
    (64) condition -> . expression LT expression
    (65) condition -> . expression GTE expression
    (66) condition -> . expression LTE expression
    (67) condition -> . expression EQUALS expression
    (68) condition -> . expression NE expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    condition                      shift and go to state 68
    expression                     shift and go to state 67
    name                           shift and go to state 46

state 35

    (35) while_statement -> WHILE . condition LBR statement_list RBR
    (61) condition -> . TRUE
    (62) condition -> . FALSE
    (63) condition -> . expression GT expression
    (64) condition -> . expression LT expression
    (65) condition -> . expression GTE expression
    (66) condition -> . expression LTE expression
    (67) condition -> . expression EQUALS expression
    (68) condition -> . expression NE expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    condition                      shift and go to state 69
    expression                     shift and go to state 67
    name                           shift and go to state 46

state 36

    (36) dowhile_statement -> DO . LBR statement_list RBR WHILE condition

    LBR             shift and go to state 70


state 37

    (37) variable_declaration -> MAKE . word expression
    (69) word -> . QUOTE STRING

    QUOTE           shift and go to state 61

    word                           shift and go to state 71

state 38

    (38) procedure_definition -> TO . STRING LBR parameter_list RBR statement_list END

    STRING          shift and go to state 72


state 39

    (43) procedure_call -> STRING . LBR expression_list RBR

    LBR             shift and go to state 73


state 40

    (47) print_statement -> PRINT . word
    (48) print_statement -> PRINT . expression
    (69) word -> . QUOTE STRING
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    QUOTE           shift and go to state 61
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    word                           shift and go to state 74
    expression                     shift and go to state 75
    name                           shift and go to state 46

state 41

    (1) statement_list -> statement_list statement .

    SETXY           reduce using rule 1 (statement_list -> statement_list statement .)
    FORWARD         reduce using rule 1 (statement_list -> statement_list statement .)
    BACK            reduce using rule 1 (statement_list -> statement_list statement .)
    RIGHT           reduce using rule 1 (statement_list -> statement_list statement .)
    LEFT            reduce using rule 1 (statement_list -> statement_list statement .)
    SETX            reduce using rule 1 (statement_list -> statement_list statement .)
    SETY            reduce using rule 1 (statement_list -> statement_list statement .)
    SETH            reduce using rule 1 (statement_list -> statement_list statement .)
    SPEED           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPS           reduce using rule 1 (statement_list -> statement_list statement .)
    SETPC           reduce using rule 1 (statement_list -> statement_list statement .)
    SETBC           reduce using rule 1 (statement_list -> statement_list statement .)
    PENUP           reduce using rule 1 (statement_list -> statement_list statement .)
    PENDOWN         reduce using rule 1 (statement_list -> statement_list statement .)
    SHOW            reduce using rule 1 (statement_list -> statement_list statement .)
    HIDE            reduce using rule 1 (statement_list -> statement_list statement .)
    HOME            reduce using rule 1 (statement_list -> statement_list statement .)
    CLEAN           reduce using rule 1 (statement_list -> statement_list statement .)
    RESET           reduce using rule 1 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 1 (statement_list -> statement_list statement .)
    IF              reduce using rule 1 (statement_list -> statement_list statement .)
    IFELSE          reduce using rule 1 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 1 (statement_list -> statement_list statement .)
    DO              reduce using rule 1 (statement_list -> statement_list statement .)
    MAKE            reduce using rule 1 (statement_list -> statement_list statement .)
    TO              reduce using rule 1 (statement_list -> statement_list statement .)
    STRING          reduce using rule 1 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 1 (statement_list -> statement_list statement .)
    $end            reduce using rule 1 (statement_list -> statement_list statement .)
    RBR             reduce using rule 1 (statement_list -> statement_list statement .)
    END             reduce using rule 1 (statement_list -> statement_list statement .)


state 42

    (13) instruction -> SETXY LBR . expression COMMA expression RBR
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 76
    name                           shift and go to state 46

state 43

    (14) instruction -> FORWARD expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 14 (instruction -> FORWARD expression .)
    FORWARD         reduce using rule 14 (instruction -> FORWARD expression .)
    BACK            reduce using rule 14 (instruction -> FORWARD expression .)
    RIGHT           reduce using rule 14 (instruction -> FORWARD expression .)
    LEFT            reduce using rule 14 (instruction -> FORWARD expression .)
    SETX            reduce using rule 14 (instruction -> FORWARD expression .)
    SETY            reduce using rule 14 (instruction -> FORWARD expression .)
    SETH            reduce using rule 14 (instruction -> FORWARD expression .)
    SPEED           reduce using rule 14 (instruction -> FORWARD expression .)
    SETPS           reduce using rule 14 (instruction -> FORWARD expression .)
    SETPC           reduce using rule 14 (instruction -> FORWARD expression .)
    SETBC           reduce using rule 14 (instruction -> FORWARD expression .)
    PENUP           reduce using rule 14 (instruction -> FORWARD expression .)
    PENDOWN         reduce using rule 14 (instruction -> FORWARD expression .)
    SHOW            reduce using rule 14 (instruction -> FORWARD expression .)
    HIDE            reduce using rule 14 (instruction -> FORWARD expression .)
    HOME            reduce using rule 14 (instruction -> FORWARD expression .)
    CLEAN           reduce using rule 14 (instruction -> FORWARD expression .)
    RESET           reduce using rule 14 (instruction -> FORWARD expression .)
    REPEAT          reduce using rule 14 (instruction -> FORWARD expression .)
    IF              reduce using rule 14 (instruction -> FORWARD expression .)
    IFELSE          reduce using rule 14 (instruction -> FORWARD expression .)
    WHILE           reduce using rule 14 (instruction -> FORWARD expression .)
    DO              reduce using rule 14 (instruction -> FORWARD expression .)
    MAKE            reduce using rule 14 (instruction -> FORWARD expression .)
    TO              reduce using rule 14 (instruction -> FORWARD expression .)
    STRING          reduce using rule 14 (instruction -> FORWARD expression .)
    PRINT           reduce using rule 14 (instruction -> FORWARD expression .)
    $end            reduce using rule 14 (instruction -> FORWARD expression .)
    RBR             reduce using rule 14 (instruction -> FORWARD expression .)
    END             reduce using rule 14 (instruction -> FORWARD expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 44

    (49) expression -> INT .

    TIMES           reduce using rule 49 (expression -> INT .)
    DIVIDE          reduce using rule 49 (expression -> INT .)
    PLUS            reduce using rule 49 (expression -> INT .)
    MINUS           reduce using rule 49 (expression -> INT .)
    POWER           reduce using rule 49 (expression -> INT .)
    SETXY           reduce using rule 49 (expression -> INT .)
    FORWARD         reduce using rule 49 (expression -> INT .)
    BACK            reduce using rule 49 (expression -> INT .)
    RIGHT           reduce using rule 49 (expression -> INT .)
    LEFT            reduce using rule 49 (expression -> INT .)
    SETX            reduce using rule 49 (expression -> INT .)
    SETY            reduce using rule 49 (expression -> INT .)
    SETH            reduce using rule 49 (expression -> INT .)
    SPEED           reduce using rule 49 (expression -> INT .)
    SETPS           reduce using rule 49 (expression -> INT .)
    SETPC           reduce using rule 49 (expression -> INT .)
    SETBC           reduce using rule 49 (expression -> INT .)
    PENUP           reduce using rule 49 (expression -> INT .)
    PENDOWN         reduce using rule 49 (expression -> INT .)
    SHOW            reduce using rule 49 (expression -> INT .)
    HIDE            reduce using rule 49 (expression -> INT .)
    HOME            reduce using rule 49 (expression -> INT .)
    CLEAN           reduce using rule 49 (expression -> INT .)
    RESET           reduce using rule 49 (expression -> INT .)
    REPEAT          reduce using rule 49 (expression -> INT .)
    IF              reduce using rule 49 (expression -> INT .)
    IFELSE          reduce using rule 49 (expression -> INT .)
    WHILE           reduce using rule 49 (expression -> INT .)
    DO              reduce using rule 49 (expression -> INT .)
    MAKE            reduce using rule 49 (expression -> INT .)
    TO              reduce using rule 49 (expression -> INT .)
    STRING          reduce using rule 49 (expression -> INT .)
    PRINT           reduce using rule 49 (expression -> INT .)
    $end            reduce using rule 49 (expression -> INT .)
    RBR             reduce using rule 49 (expression -> INT .)
    END             reduce using rule 49 (expression -> INT .)
    LBR             reduce using rule 49 (expression -> INT .)
    GT              reduce using rule 49 (expression -> INT .)
    LT              reduce using rule 49 (expression -> INT .)
    GTE             reduce using rule 49 (expression -> INT .)
    LTE             reduce using rule 49 (expression -> INT .)
    EQUALS          reduce using rule 49 (expression -> INT .)
    NE              reduce using rule 49 (expression -> INT .)
    COMMA           reduce using rule 49 (expression -> INT .)
    RPAR            reduce using rule 49 (expression -> INT .)


state 45

    (50) expression -> FLOAT .

    TIMES           reduce using rule 50 (expression -> FLOAT .)
    DIVIDE          reduce using rule 50 (expression -> FLOAT .)
    PLUS            reduce using rule 50 (expression -> FLOAT .)
    MINUS           reduce using rule 50 (expression -> FLOAT .)
    POWER           reduce using rule 50 (expression -> FLOAT .)
    SETXY           reduce using rule 50 (expression -> FLOAT .)
    FORWARD         reduce using rule 50 (expression -> FLOAT .)
    BACK            reduce using rule 50 (expression -> FLOAT .)
    RIGHT           reduce using rule 50 (expression -> FLOAT .)
    LEFT            reduce using rule 50 (expression -> FLOAT .)
    SETX            reduce using rule 50 (expression -> FLOAT .)
    SETY            reduce using rule 50 (expression -> FLOAT .)
    SETH            reduce using rule 50 (expression -> FLOAT .)
    SPEED           reduce using rule 50 (expression -> FLOAT .)
    SETPS           reduce using rule 50 (expression -> FLOAT .)
    SETPC           reduce using rule 50 (expression -> FLOAT .)
    SETBC           reduce using rule 50 (expression -> FLOAT .)
    PENUP           reduce using rule 50 (expression -> FLOAT .)
    PENDOWN         reduce using rule 50 (expression -> FLOAT .)
    SHOW            reduce using rule 50 (expression -> FLOAT .)
    HIDE            reduce using rule 50 (expression -> FLOAT .)
    HOME            reduce using rule 50 (expression -> FLOAT .)
    CLEAN           reduce using rule 50 (expression -> FLOAT .)
    RESET           reduce using rule 50 (expression -> FLOAT .)
    REPEAT          reduce using rule 50 (expression -> FLOAT .)
    IF              reduce using rule 50 (expression -> FLOAT .)
    IFELSE          reduce using rule 50 (expression -> FLOAT .)
    WHILE           reduce using rule 50 (expression -> FLOAT .)
    DO              reduce using rule 50 (expression -> FLOAT .)
    MAKE            reduce using rule 50 (expression -> FLOAT .)
    TO              reduce using rule 50 (expression -> FLOAT .)
    STRING          reduce using rule 50 (expression -> FLOAT .)
    PRINT           reduce using rule 50 (expression -> FLOAT .)
    $end            reduce using rule 50 (expression -> FLOAT .)
    RBR             reduce using rule 50 (expression -> FLOAT .)
    END             reduce using rule 50 (expression -> FLOAT .)
    LBR             reduce using rule 50 (expression -> FLOAT .)
    GT              reduce using rule 50 (expression -> FLOAT .)
    LT              reduce using rule 50 (expression -> FLOAT .)
    GTE             reduce using rule 50 (expression -> FLOAT .)
    LTE             reduce using rule 50 (expression -> FLOAT .)
    EQUALS          reduce using rule 50 (expression -> FLOAT .)
    NE              reduce using rule 50 (expression -> FLOAT .)
    COMMA           reduce using rule 50 (expression -> FLOAT .)
    RPAR            reduce using rule 50 (expression -> FLOAT .)


state 46

    (51) expression -> name .

    TIMES           reduce using rule 51 (expression -> name .)
    DIVIDE          reduce using rule 51 (expression -> name .)
    PLUS            reduce using rule 51 (expression -> name .)
    MINUS           reduce using rule 51 (expression -> name .)
    POWER           reduce using rule 51 (expression -> name .)
    SETXY           reduce using rule 51 (expression -> name .)
    FORWARD         reduce using rule 51 (expression -> name .)
    BACK            reduce using rule 51 (expression -> name .)
    RIGHT           reduce using rule 51 (expression -> name .)
    LEFT            reduce using rule 51 (expression -> name .)
    SETX            reduce using rule 51 (expression -> name .)
    SETY            reduce using rule 51 (expression -> name .)
    SETH            reduce using rule 51 (expression -> name .)
    SPEED           reduce using rule 51 (expression -> name .)
    SETPS           reduce using rule 51 (expression -> name .)
    SETPC           reduce using rule 51 (expression -> name .)
    SETBC           reduce using rule 51 (expression -> name .)
    PENUP           reduce using rule 51 (expression -> name .)
    PENDOWN         reduce using rule 51 (expression -> name .)
    SHOW            reduce using rule 51 (expression -> name .)
    HIDE            reduce using rule 51 (expression -> name .)
    HOME            reduce using rule 51 (expression -> name .)
    CLEAN           reduce using rule 51 (expression -> name .)
    RESET           reduce using rule 51 (expression -> name .)
    REPEAT          reduce using rule 51 (expression -> name .)
    IF              reduce using rule 51 (expression -> name .)
    IFELSE          reduce using rule 51 (expression -> name .)
    WHILE           reduce using rule 51 (expression -> name .)
    DO              reduce using rule 51 (expression -> name .)
    MAKE            reduce using rule 51 (expression -> name .)
    TO              reduce using rule 51 (expression -> name .)
    STRING          reduce using rule 51 (expression -> name .)
    PRINT           reduce using rule 51 (expression -> name .)
    $end            reduce using rule 51 (expression -> name .)
    RBR             reduce using rule 51 (expression -> name .)
    END             reduce using rule 51 (expression -> name .)
    LBR             reduce using rule 51 (expression -> name .)
    GT              reduce using rule 51 (expression -> name .)
    LT              reduce using rule 51 (expression -> name .)
    GTE             reduce using rule 51 (expression -> name .)
    LTE             reduce using rule 51 (expression -> name .)
    EQUALS          reduce using rule 51 (expression -> name .)
    NE              reduce using rule 51 (expression -> name .)
    COMMA           reduce using rule 51 (expression -> name .)
    RPAR            reduce using rule 51 (expression -> name .)


state 47

    (52) expression -> REPCOUNT .

    TIMES           reduce using rule 52 (expression -> REPCOUNT .)
    DIVIDE          reduce using rule 52 (expression -> REPCOUNT .)
    PLUS            reduce using rule 52 (expression -> REPCOUNT .)
    MINUS           reduce using rule 52 (expression -> REPCOUNT .)
    POWER           reduce using rule 52 (expression -> REPCOUNT .)
    SETXY           reduce using rule 52 (expression -> REPCOUNT .)
    FORWARD         reduce using rule 52 (expression -> REPCOUNT .)
    BACK            reduce using rule 52 (expression -> REPCOUNT .)
    RIGHT           reduce using rule 52 (expression -> REPCOUNT .)
    LEFT            reduce using rule 52 (expression -> REPCOUNT .)
    SETX            reduce using rule 52 (expression -> REPCOUNT .)
    SETY            reduce using rule 52 (expression -> REPCOUNT .)
    SETH            reduce using rule 52 (expression -> REPCOUNT .)
    SPEED           reduce using rule 52 (expression -> REPCOUNT .)
    SETPS           reduce using rule 52 (expression -> REPCOUNT .)
    SETPC           reduce using rule 52 (expression -> REPCOUNT .)
    SETBC           reduce using rule 52 (expression -> REPCOUNT .)
    PENUP           reduce using rule 52 (expression -> REPCOUNT .)
    PENDOWN         reduce using rule 52 (expression -> REPCOUNT .)
    SHOW            reduce using rule 52 (expression -> REPCOUNT .)
    HIDE            reduce using rule 52 (expression -> REPCOUNT .)
    HOME            reduce using rule 52 (expression -> REPCOUNT .)
    CLEAN           reduce using rule 52 (expression -> REPCOUNT .)
    RESET           reduce using rule 52 (expression -> REPCOUNT .)
    REPEAT          reduce using rule 52 (expression -> REPCOUNT .)
    IF              reduce using rule 52 (expression -> REPCOUNT .)
    IFELSE          reduce using rule 52 (expression -> REPCOUNT .)
    WHILE           reduce using rule 52 (expression -> REPCOUNT .)
    DO              reduce using rule 52 (expression -> REPCOUNT .)
    MAKE            reduce using rule 52 (expression -> REPCOUNT .)
    TO              reduce using rule 52 (expression -> REPCOUNT .)
    STRING          reduce using rule 52 (expression -> REPCOUNT .)
    PRINT           reduce using rule 52 (expression -> REPCOUNT .)
    $end            reduce using rule 52 (expression -> REPCOUNT .)
    RBR             reduce using rule 52 (expression -> REPCOUNT .)
    END             reduce using rule 52 (expression -> REPCOUNT .)
    LBR             reduce using rule 52 (expression -> REPCOUNT .)
    GT              reduce using rule 52 (expression -> REPCOUNT .)
    LT              reduce using rule 52 (expression -> REPCOUNT .)
    GTE             reduce using rule 52 (expression -> REPCOUNT .)
    LTE             reduce using rule 52 (expression -> REPCOUNT .)
    EQUALS          reduce using rule 52 (expression -> REPCOUNT .)
    NE              reduce using rule 52 (expression -> REPCOUNT .)
    COMMA           reduce using rule 52 (expression -> REPCOUNT .)
    RPAR            reduce using rule 52 (expression -> REPCOUNT .)


state 48

    (53) expression -> LPAR . expression RPAR
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 82
    name                           shift and go to state 46

state 49

    (54) expression -> MINUS . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 83
    name                           shift and go to state 46

state 50

    (55) expression -> RANDOM . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 84
    name                           shift and go to state 46

state 51

    (70) name -> COLON . STRING

    STRING          shift and go to state 85


state 52

    (15) instruction -> BACK expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 15 (instruction -> BACK expression .)
    FORWARD         reduce using rule 15 (instruction -> BACK expression .)
    BACK            reduce using rule 15 (instruction -> BACK expression .)
    RIGHT           reduce using rule 15 (instruction -> BACK expression .)
    LEFT            reduce using rule 15 (instruction -> BACK expression .)
    SETX            reduce using rule 15 (instruction -> BACK expression .)
    SETY            reduce using rule 15 (instruction -> BACK expression .)
    SETH            reduce using rule 15 (instruction -> BACK expression .)
    SPEED           reduce using rule 15 (instruction -> BACK expression .)
    SETPS           reduce using rule 15 (instruction -> BACK expression .)
    SETPC           reduce using rule 15 (instruction -> BACK expression .)
    SETBC           reduce using rule 15 (instruction -> BACK expression .)
    PENUP           reduce using rule 15 (instruction -> BACK expression .)
    PENDOWN         reduce using rule 15 (instruction -> BACK expression .)
    SHOW            reduce using rule 15 (instruction -> BACK expression .)
    HIDE            reduce using rule 15 (instruction -> BACK expression .)
    HOME            reduce using rule 15 (instruction -> BACK expression .)
    CLEAN           reduce using rule 15 (instruction -> BACK expression .)
    RESET           reduce using rule 15 (instruction -> BACK expression .)
    REPEAT          reduce using rule 15 (instruction -> BACK expression .)
    IF              reduce using rule 15 (instruction -> BACK expression .)
    IFELSE          reduce using rule 15 (instruction -> BACK expression .)
    WHILE           reduce using rule 15 (instruction -> BACK expression .)
    DO              reduce using rule 15 (instruction -> BACK expression .)
    MAKE            reduce using rule 15 (instruction -> BACK expression .)
    TO              reduce using rule 15 (instruction -> BACK expression .)
    STRING          reduce using rule 15 (instruction -> BACK expression .)
    PRINT           reduce using rule 15 (instruction -> BACK expression .)
    $end            reduce using rule 15 (instruction -> BACK expression .)
    RBR             reduce using rule 15 (instruction -> BACK expression .)
    END             reduce using rule 15 (instruction -> BACK expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 53

    (16) instruction -> RIGHT expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 16 (instruction -> RIGHT expression .)
    FORWARD         reduce using rule 16 (instruction -> RIGHT expression .)
    BACK            reduce using rule 16 (instruction -> RIGHT expression .)
    RIGHT           reduce using rule 16 (instruction -> RIGHT expression .)
    LEFT            reduce using rule 16 (instruction -> RIGHT expression .)
    SETX            reduce using rule 16 (instruction -> RIGHT expression .)
    SETY            reduce using rule 16 (instruction -> RIGHT expression .)
    SETH            reduce using rule 16 (instruction -> RIGHT expression .)
    SPEED           reduce using rule 16 (instruction -> RIGHT expression .)
    SETPS           reduce using rule 16 (instruction -> RIGHT expression .)
    SETPC           reduce using rule 16 (instruction -> RIGHT expression .)
    SETBC           reduce using rule 16 (instruction -> RIGHT expression .)
    PENUP           reduce using rule 16 (instruction -> RIGHT expression .)
    PENDOWN         reduce using rule 16 (instruction -> RIGHT expression .)
    SHOW            reduce using rule 16 (instruction -> RIGHT expression .)
    HIDE            reduce using rule 16 (instruction -> RIGHT expression .)
    HOME            reduce using rule 16 (instruction -> RIGHT expression .)
    CLEAN           reduce using rule 16 (instruction -> RIGHT expression .)
    RESET           reduce using rule 16 (instruction -> RIGHT expression .)
    REPEAT          reduce using rule 16 (instruction -> RIGHT expression .)
    IF              reduce using rule 16 (instruction -> RIGHT expression .)
    IFELSE          reduce using rule 16 (instruction -> RIGHT expression .)
    WHILE           reduce using rule 16 (instruction -> RIGHT expression .)
    DO              reduce using rule 16 (instruction -> RIGHT expression .)
    MAKE            reduce using rule 16 (instruction -> RIGHT expression .)
    TO              reduce using rule 16 (instruction -> RIGHT expression .)
    STRING          reduce using rule 16 (instruction -> RIGHT expression .)
    PRINT           reduce using rule 16 (instruction -> RIGHT expression .)
    $end            reduce using rule 16 (instruction -> RIGHT expression .)
    RBR             reduce using rule 16 (instruction -> RIGHT expression .)
    END             reduce using rule 16 (instruction -> RIGHT expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 54

    (17) instruction -> LEFT expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 17 (instruction -> LEFT expression .)
    FORWARD         reduce using rule 17 (instruction -> LEFT expression .)
    BACK            reduce using rule 17 (instruction -> LEFT expression .)
    RIGHT           reduce using rule 17 (instruction -> LEFT expression .)
    LEFT            reduce using rule 17 (instruction -> LEFT expression .)
    SETX            reduce using rule 17 (instruction -> LEFT expression .)
    SETY            reduce using rule 17 (instruction -> LEFT expression .)
    SETH            reduce using rule 17 (instruction -> LEFT expression .)
    SPEED           reduce using rule 17 (instruction -> LEFT expression .)
    SETPS           reduce using rule 17 (instruction -> LEFT expression .)
    SETPC           reduce using rule 17 (instruction -> LEFT expression .)
    SETBC           reduce using rule 17 (instruction -> LEFT expression .)
    PENUP           reduce using rule 17 (instruction -> LEFT expression .)
    PENDOWN         reduce using rule 17 (instruction -> LEFT expression .)
    SHOW            reduce using rule 17 (instruction -> LEFT expression .)
    HIDE            reduce using rule 17 (instruction -> LEFT expression .)
    HOME            reduce using rule 17 (instruction -> LEFT expression .)
    CLEAN           reduce using rule 17 (instruction -> LEFT expression .)
    RESET           reduce using rule 17 (instruction -> LEFT expression .)
    REPEAT          reduce using rule 17 (instruction -> LEFT expression .)
    IF              reduce using rule 17 (instruction -> LEFT expression .)
    IFELSE          reduce using rule 17 (instruction -> LEFT expression .)
    WHILE           reduce using rule 17 (instruction -> LEFT expression .)
    DO              reduce using rule 17 (instruction -> LEFT expression .)
    MAKE            reduce using rule 17 (instruction -> LEFT expression .)
    TO              reduce using rule 17 (instruction -> LEFT expression .)
    STRING          reduce using rule 17 (instruction -> LEFT expression .)
    PRINT           reduce using rule 17 (instruction -> LEFT expression .)
    $end            reduce using rule 17 (instruction -> LEFT expression .)
    RBR             reduce using rule 17 (instruction -> LEFT expression .)
    END             reduce using rule 17 (instruction -> LEFT expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 55

    (18) instruction -> SETX expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 18 (instruction -> SETX expression .)
    FORWARD         reduce using rule 18 (instruction -> SETX expression .)
    BACK            reduce using rule 18 (instruction -> SETX expression .)
    RIGHT           reduce using rule 18 (instruction -> SETX expression .)
    LEFT            reduce using rule 18 (instruction -> SETX expression .)
    SETX            reduce using rule 18 (instruction -> SETX expression .)
    SETY            reduce using rule 18 (instruction -> SETX expression .)
    SETH            reduce using rule 18 (instruction -> SETX expression .)
    SPEED           reduce using rule 18 (instruction -> SETX expression .)
    SETPS           reduce using rule 18 (instruction -> SETX expression .)
    SETPC           reduce using rule 18 (instruction -> SETX expression .)
    SETBC           reduce using rule 18 (instruction -> SETX expression .)
    PENUP           reduce using rule 18 (instruction -> SETX expression .)
    PENDOWN         reduce using rule 18 (instruction -> SETX expression .)
    SHOW            reduce using rule 18 (instruction -> SETX expression .)
    HIDE            reduce using rule 18 (instruction -> SETX expression .)
    HOME            reduce using rule 18 (instruction -> SETX expression .)
    CLEAN           reduce using rule 18 (instruction -> SETX expression .)
    RESET           reduce using rule 18 (instruction -> SETX expression .)
    REPEAT          reduce using rule 18 (instruction -> SETX expression .)
    IF              reduce using rule 18 (instruction -> SETX expression .)
    IFELSE          reduce using rule 18 (instruction -> SETX expression .)
    WHILE           reduce using rule 18 (instruction -> SETX expression .)
    DO              reduce using rule 18 (instruction -> SETX expression .)
    MAKE            reduce using rule 18 (instruction -> SETX expression .)
    TO              reduce using rule 18 (instruction -> SETX expression .)
    STRING          reduce using rule 18 (instruction -> SETX expression .)
    PRINT           reduce using rule 18 (instruction -> SETX expression .)
    $end            reduce using rule 18 (instruction -> SETX expression .)
    RBR             reduce using rule 18 (instruction -> SETX expression .)
    END             reduce using rule 18 (instruction -> SETX expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 56

    (19) instruction -> SETY expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 19 (instruction -> SETY expression .)
    FORWARD         reduce using rule 19 (instruction -> SETY expression .)
    BACK            reduce using rule 19 (instruction -> SETY expression .)
    RIGHT           reduce using rule 19 (instruction -> SETY expression .)
    LEFT            reduce using rule 19 (instruction -> SETY expression .)
    SETX            reduce using rule 19 (instruction -> SETY expression .)
    SETY            reduce using rule 19 (instruction -> SETY expression .)
    SETH            reduce using rule 19 (instruction -> SETY expression .)
    SPEED           reduce using rule 19 (instruction -> SETY expression .)
    SETPS           reduce using rule 19 (instruction -> SETY expression .)
    SETPC           reduce using rule 19 (instruction -> SETY expression .)
    SETBC           reduce using rule 19 (instruction -> SETY expression .)
    PENUP           reduce using rule 19 (instruction -> SETY expression .)
    PENDOWN         reduce using rule 19 (instruction -> SETY expression .)
    SHOW            reduce using rule 19 (instruction -> SETY expression .)
    HIDE            reduce using rule 19 (instruction -> SETY expression .)
    HOME            reduce using rule 19 (instruction -> SETY expression .)
    CLEAN           reduce using rule 19 (instruction -> SETY expression .)
    RESET           reduce using rule 19 (instruction -> SETY expression .)
    REPEAT          reduce using rule 19 (instruction -> SETY expression .)
    IF              reduce using rule 19 (instruction -> SETY expression .)
    IFELSE          reduce using rule 19 (instruction -> SETY expression .)
    WHILE           reduce using rule 19 (instruction -> SETY expression .)
    DO              reduce using rule 19 (instruction -> SETY expression .)
    MAKE            reduce using rule 19 (instruction -> SETY expression .)
    TO              reduce using rule 19 (instruction -> SETY expression .)
    STRING          reduce using rule 19 (instruction -> SETY expression .)
    PRINT           reduce using rule 19 (instruction -> SETY expression .)
    $end            reduce using rule 19 (instruction -> SETY expression .)
    RBR             reduce using rule 19 (instruction -> SETY expression .)
    END             reduce using rule 19 (instruction -> SETY expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 57

    (20) instruction -> SETH expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 20 (instruction -> SETH expression .)
    FORWARD         reduce using rule 20 (instruction -> SETH expression .)
    BACK            reduce using rule 20 (instruction -> SETH expression .)
    RIGHT           reduce using rule 20 (instruction -> SETH expression .)
    LEFT            reduce using rule 20 (instruction -> SETH expression .)
    SETX            reduce using rule 20 (instruction -> SETH expression .)
    SETY            reduce using rule 20 (instruction -> SETH expression .)
    SETH            reduce using rule 20 (instruction -> SETH expression .)
    SPEED           reduce using rule 20 (instruction -> SETH expression .)
    SETPS           reduce using rule 20 (instruction -> SETH expression .)
    SETPC           reduce using rule 20 (instruction -> SETH expression .)
    SETBC           reduce using rule 20 (instruction -> SETH expression .)
    PENUP           reduce using rule 20 (instruction -> SETH expression .)
    PENDOWN         reduce using rule 20 (instruction -> SETH expression .)
    SHOW            reduce using rule 20 (instruction -> SETH expression .)
    HIDE            reduce using rule 20 (instruction -> SETH expression .)
    HOME            reduce using rule 20 (instruction -> SETH expression .)
    CLEAN           reduce using rule 20 (instruction -> SETH expression .)
    RESET           reduce using rule 20 (instruction -> SETH expression .)
    REPEAT          reduce using rule 20 (instruction -> SETH expression .)
    IF              reduce using rule 20 (instruction -> SETH expression .)
    IFELSE          reduce using rule 20 (instruction -> SETH expression .)
    WHILE           reduce using rule 20 (instruction -> SETH expression .)
    DO              reduce using rule 20 (instruction -> SETH expression .)
    MAKE            reduce using rule 20 (instruction -> SETH expression .)
    TO              reduce using rule 20 (instruction -> SETH expression .)
    STRING          reduce using rule 20 (instruction -> SETH expression .)
    PRINT           reduce using rule 20 (instruction -> SETH expression .)
    $end            reduce using rule 20 (instruction -> SETH expression .)
    RBR             reduce using rule 20 (instruction -> SETH expression .)
    END             reduce using rule 20 (instruction -> SETH expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 58

    (21) instruction -> SPEED expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 21 (instruction -> SPEED expression .)
    FORWARD         reduce using rule 21 (instruction -> SPEED expression .)
    BACK            reduce using rule 21 (instruction -> SPEED expression .)
    RIGHT           reduce using rule 21 (instruction -> SPEED expression .)
    LEFT            reduce using rule 21 (instruction -> SPEED expression .)
    SETX            reduce using rule 21 (instruction -> SPEED expression .)
    SETY            reduce using rule 21 (instruction -> SPEED expression .)
    SETH            reduce using rule 21 (instruction -> SPEED expression .)
    SPEED           reduce using rule 21 (instruction -> SPEED expression .)
    SETPS           reduce using rule 21 (instruction -> SPEED expression .)
    SETPC           reduce using rule 21 (instruction -> SPEED expression .)
    SETBC           reduce using rule 21 (instruction -> SPEED expression .)
    PENUP           reduce using rule 21 (instruction -> SPEED expression .)
    PENDOWN         reduce using rule 21 (instruction -> SPEED expression .)
    SHOW            reduce using rule 21 (instruction -> SPEED expression .)
    HIDE            reduce using rule 21 (instruction -> SPEED expression .)
    HOME            reduce using rule 21 (instruction -> SPEED expression .)
    CLEAN           reduce using rule 21 (instruction -> SPEED expression .)
    RESET           reduce using rule 21 (instruction -> SPEED expression .)
    REPEAT          reduce using rule 21 (instruction -> SPEED expression .)
    IF              reduce using rule 21 (instruction -> SPEED expression .)
    IFELSE          reduce using rule 21 (instruction -> SPEED expression .)
    WHILE           reduce using rule 21 (instruction -> SPEED expression .)
    DO              reduce using rule 21 (instruction -> SPEED expression .)
    MAKE            reduce using rule 21 (instruction -> SPEED expression .)
    TO              reduce using rule 21 (instruction -> SPEED expression .)
    STRING          reduce using rule 21 (instruction -> SPEED expression .)
    PRINT           reduce using rule 21 (instruction -> SPEED expression .)
    $end            reduce using rule 21 (instruction -> SPEED expression .)
    RBR             reduce using rule 21 (instruction -> SPEED expression .)
    END             reduce using rule 21 (instruction -> SPEED expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 59

    (22) instruction -> SETPS expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 22 (instruction -> SETPS expression .)
    FORWARD         reduce using rule 22 (instruction -> SETPS expression .)
    BACK            reduce using rule 22 (instruction -> SETPS expression .)
    RIGHT           reduce using rule 22 (instruction -> SETPS expression .)
    LEFT            reduce using rule 22 (instruction -> SETPS expression .)
    SETX            reduce using rule 22 (instruction -> SETPS expression .)
    SETY            reduce using rule 22 (instruction -> SETPS expression .)
    SETH            reduce using rule 22 (instruction -> SETPS expression .)
    SPEED           reduce using rule 22 (instruction -> SETPS expression .)
    SETPS           reduce using rule 22 (instruction -> SETPS expression .)
    SETPC           reduce using rule 22 (instruction -> SETPS expression .)
    SETBC           reduce using rule 22 (instruction -> SETPS expression .)
    PENUP           reduce using rule 22 (instruction -> SETPS expression .)
    PENDOWN         reduce using rule 22 (instruction -> SETPS expression .)
    SHOW            reduce using rule 22 (instruction -> SETPS expression .)
    HIDE            reduce using rule 22 (instruction -> SETPS expression .)
    HOME            reduce using rule 22 (instruction -> SETPS expression .)
    CLEAN           reduce using rule 22 (instruction -> SETPS expression .)
    RESET           reduce using rule 22 (instruction -> SETPS expression .)
    REPEAT          reduce using rule 22 (instruction -> SETPS expression .)
    IF              reduce using rule 22 (instruction -> SETPS expression .)
    IFELSE          reduce using rule 22 (instruction -> SETPS expression .)
    WHILE           reduce using rule 22 (instruction -> SETPS expression .)
    DO              reduce using rule 22 (instruction -> SETPS expression .)
    MAKE            reduce using rule 22 (instruction -> SETPS expression .)
    TO              reduce using rule 22 (instruction -> SETPS expression .)
    STRING          reduce using rule 22 (instruction -> SETPS expression .)
    PRINT           reduce using rule 22 (instruction -> SETPS expression .)
    $end            reduce using rule 22 (instruction -> SETPS expression .)
    RBR             reduce using rule 22 (instruction -> SETPS expression .)
    END             reduce using rule 22 (instruction -> SETPS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 60

    (23) instruction -> SETPC word .

    SETXY           reduce using rule 23 (instruction -> SETPC word .)
    FORWARD         reduce using rule 23 (instruction -> SETPC word .)
    BACK            reduce using rule 23 (instruction -> SETPC word .)
    RIGHT           reduce using rule 23 (instruction -> SETPC word .)
    LEFT            reduce using rule 23 (instruction -> SETPC word .)
    SETX            reduce using rule 23 (instruction -> SETPC word .)
    SETY            reduce using rule 23 (instruction -> SETPC word .)
    SETH            reduce using rule 23 (instruction -> SETPC word .)
    SPEED           reduce using rule 23 (instruction -> SETPC word .)
    SETPS           reduce using rule 23 (instruction -> SETPC word .)
    SETPC           reduce using rule 23 (instruction -> SETPC word .)
    SETBC           reduce using rule 23 (instruction -> SETPC word .)
    PENUP           reduce using rule 23 (instruction -> SETPC word .)
    PENDOWN         reduce using rule 23 (instruction -> SETPC word .)
    SHOW            reduce using rule 23 (instruction -> SETPC word .)
    HIDE            reduce using rule 23 (instruction -> SETPC word .)
    HOME            reduce using rule 23 (instruction -> SETPC word .)
    CLEAN           reduce using rule 23 (instruction -> SETPC word .)
    RESET           reduce using rule 23 (instruction -> SETPC word .)
    REPEAT          reduce using rule 23 (instruction -> SETPC word .)
    IF              reduce using rule 23 (instruction -> SETPC word .)
    IFELSE          reduce using rule 23 (instruction -> SETPC word .)
    WHILE           reduce using rule 23 (instruction -> SETPC word .)
    DO              reduce using rule 23 (instruction -> SETPC word .)
    MAKE            reduce using rule 23 (instruction -> SETPC word .)
    TO              reduce using rule 23 (instruction -> SETPC word .)
    STRING          reduce using rule 23 (instruction -> SETPC word .)
    PRINT           reduce using rule 23 (instruction -> SETPC word .)
    $end            reduce using rule 23 (instruction -> SETPC word .)
    RBR             reduce using rule 23 (instruction -> SETPC word .)
    END             reduce using rule 23 (instruction -> SETPC word .)


state 61

    (69) word -> QUOTE . STRING

    STRING          shift and go to state 86


state 62

    (24) instruction -> SETBC word .

    SETXY           reduce using rule 24 (instruction -> SETBC word .)
    FORWARD         reduce using rule 24 (instruction -> SETBC word .)
    BACK            reduce using rule 24 (instruction -> SETBC word .)
    RIGHT           reduce using rule 24 (instruction -> SETBC word .)
    LEFT            reduce using rule 24 (instruction -> SETBC word .)
    SETX            reduce using rule 24 (instruction -> SETBC word .)
    SETY            reduce using rule 24 (instruction -> SETBC word .)
    SETH            reduce using rule 24 (instruction -> SETBC word .)
    SPEED           reduce using rule 24 (instruction -> SETBC word .)
    SETPS           reduce using rule 24 (instruction -> SETBC word .)
    SETPC           reduce using rule 24 (instruction -> SETBC word .)
    SETBC           reduce using rule 24 (instruction -> SETBC word .)
    PENUP           reduce using rule 24 (instruction -> SETBC word .)
    PENDOWN         reduce using rule 24 (instruction -> SETBC word .)
    SHOW            reduce using rule 24 (instruction -> SETBC word .)
    HIDE            reduce using rule 24 (instruction -> SETBC word .)
    HOME            reduce using rule 24 (instruction -> SETBC word .)
    CLEAN           reduce using rule 24 (instruction -> SETBC word .)
    RESET           reduce using rule 24 (instruction -> SETBC word .)
    REPEAT          reduce using rule 24 (instruction -> SETBC word .)
    IF              reduce using rule 24 (instruction -> SETBC word .)
    IFELSE          reduce using rule 24 (instruction -> SETBC word .)
    WHILE           reduce using rule 24 (instruction -> SETBC word .)
    DO              reduce using rule 24 (instruction -> SETBC word .)
    MAKE            reduce using rule 24 (instruction -> SETBC word .)
    TO              reduce using rule 24 (instruction -> SETBC word .)
    STRING          reduce using rule 24 (instruction -> SETBC word .)
    PRINT           reduce using rule 24 (instruction -> SETBC word .)
    $end            reduce using rule 24 (instruction -> SETBC word .)
    RBR             reduce using rule 24 (instruction -> SETBC word .)
    END             reduce using rule 24 (instruction -> SETBC word .)


state 63

    (32) repeat_statement -> REPEAT expression . LBR statement_list RBR
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             shift and go to state 87
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 64

    (33) if_statement -> IF condition . LBR statement_list RBR

    LBR             shift and go to state 88


state 65

    (61) condition -> TRUE .

    LBR             reduce using rule 61 (condition -> TRUE .)
    SETXY           reduce using rule 61 (condition -> TRUE .)
    FORWARD         reduce using rule 61 (condition -> TRUE .)
    BACK            reduce using rule 61 (condition -> TRUE .)
    RIGHT           reduce using rule 61 (condition -> TRUE .)
    LEFT            reduce using rule 61 (condition -> TRUE .)
    SETX            reduce using rule 61 (condition -> TRUE .)
    SETY            reduce using rule 61 (condition -> TRUE .)
    SETH            reduce using rule 61 (condition -> TRUE .)
    SPEED           reduce using rule 61 (condition -> TRUE .)
    SETPS           reduce using rule 61 (condition -> TRUE .)
    SETPC           reduce using rule 61 (condition -> TRUE .)
    SETBC           reduce using rule 61 (condition -> TRUE .)
    PENUP           reduce using rule 61 (condition -> TRUE .)
    PENDOWN         reduce using rule 61 (condition -> TRUE .)
    SHOW            reduce using rule 61 (condition -> TRUE .)
    HIDE            reduce using rule 61 (condition -> TRUE .)
    HOME            reduce using rule 61 (condition -> TRUE .)
    CLEAN           reduce using rule 61 (condition -> TRUE .)
    RESET           reduce using rule 61 (condition -> TRUE .)
    REPEAT          reduce using rule 61 (condition -> TRUE .)
    IF              reduce using rule 61 (condition -> TRUE .)
    IFELSE          reduce using rule 61 (condition -> TRUE .)
    WHILE           reduce using rule 61 (condition -> TRUE .)
    DO              reduce using rule 61 (condition -> TRUE .)
    MAKE            reduce using rule 61 (condition -> TRUE .)
    TO              reduce using rule 61 (condition -> TRUE .)
    STRING          reduce using rule 61 (condition -> TRUE .)
    PRINT           reduce using rule 61 (condition -> TRUE .)
    $end            reduce using rule 61 (condition -> TRUE .)
    RBR             reduce using rule 61 (condition -> TRUE .)
    END             reduce using rule 61 (condition -> TRUE .)


state 66

    (62) condition -> FALSE .

    LBR             reduce using rule 62 (condition -> FALSE .)
    SETXY           reduce using rule 62 (condition -> FALSE .)
    FORWARD         reduce using rule 62 (condition -> FALSE .)
    BACK            reduce using rule 62 (condition -> FALSE .)
    RIGHT           reduce using rule 62 (condition -> FALSE .)
    LEFT            reduce using rule 62 (condition -> FALSE .)
    SETX            reduce using rule 62 (condition -> FALSE .)
    SETY            reduce using rule 62 (condition -> FALSE .)
    SETH            reduce using rule 62 (condition -> FALSE .)
    SPEED           reduce using rule 62 (condition -> FALSE .)
    SETPS           reduce using rule 62 (condition -> FALSE .)
    SETPC           reduce using rule 62 (condition -> FALSE .)
    SETBC           reduce using rule 62 (condition -> FALSE .)
    PENUP           reduce using rule 62 (condition -> FALSE .)
    PENDOWN         reduce using rule 62 (condition -> FALSE .)
    SHOW            reduce using rule 62 (condition -> FALSE .)
    HIDE            reduce using rule 62 (condition -> FALSE .)
    HOME            reduce using rule 62 (condition -> FALSE .)
    CLEAN           reduce using rule 62 (condition -> FALSE .)
    RESET           reduce using rule 62 (condition -> FALSE .)
    REPEAT          reduce using rule 62 (condition -> FALSE .)
    IF              reduce using rule 62 (condition -> FALSE .)
    IFELSE          reduce using rule 62 (condition -> FALSE .)
    WHILE           reduce using rule 62 (condition -> FALSE .)
    DO              reduce using rule 62 (condition -> FALSE .)
    MAKE            reduce using rule 62 (condition -> FALSE .)
    TO              reduce using rule 62 (condition -> FALSE .)
    STRING          reduce using rule 62 (condition -> FALSE .)
    PRINT           reduce using rule 62 (condition -> FALSE .)
    $end            reduce using rule 62 (condition -> FALSE .)
    RBR             reduce using rule 62 (condition -> FALSE .)
    END             reduce using rule 62 (condition -> FALSE .)


state 67

    (63) condition -> expression . GT expression
    (64) condition -> expression . LT expression
    (65) condition -> expression . GTE expression
    (66) condition -> expression . LTE expression
    (67) condition -> expression . EQUALS expression
    (68) condition -> expression . NE expression
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    GT              shift and go to state 89
    LT              shift and go to state 90
    GTE             shift and go to state 91
    LTE             shift and go to state 92
    EQUALS          shift and go to state 93
    NE              shift and go to state 94
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 68

    (34) ifelse_statement -> IFELSE condition . LBR statement_list RBR LBR statement_list RBR

    LBR             shift and go to state 95


state 69

    (35) while_statement -> WHILE condition . LBR statement_list RBR

    LBR             shift and go to state 96


state 70

    (36) dowhile_statement -> DO LBR . statement_list RBR WHILE condition
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 97
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 71

    (37) variable_declaration -> MAKE word . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 98
    name                           shift and go to state 46

state 72

    (38) procedure_definition -> TO STRING . LBR parameter_list RBR statement_list END

    LBR             shift and go to state 99


state 73

    (43) procedure_call -> STRING LBR . expression_list RBR
    (44) expression_list -> . expression_list COMMA expression
    (45) expression_list -> . expression
    (46) expression_list -> . empty
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (71) empty -> .
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    RBR             reduce using rule 71 (empty -> .)
    COMMA           reduce using rule 71 (empty -> .)
    COLON           shift and go to state 51

    expression_list                shift and go to state 100
    expression                     shift and go to state 101
    empty                          shift and go to state 102
    name                           shift and go to state 46

state 74

    (47) print_statement -> PRINT word .

    SETXY           reduce using rule 47 (print_statement -> PRINT word .)
    FORWARD         reduce using rule 47 (print_statement -> PRINT word .)
    BACK            reduce using rule 47 (print_statement -> PRINT word .)
    RIGHT           reduce using rule 47 (print_statement -> PRINT word .)
    LEFT            reduce using rule 47 (print_statement -> PRINT word .)
    SETX            reduce using rule 47 (print_statement -> PRINT word .)
    SETY            reduce using rule 47 (print_statement -> PRINT word .)
    SETH            reduce using rule 47 (print_statement -> PRINT word .)
    SPEED           reduce using rule 47 (print_statement -> PRINT word .)
    SETPS           reduce using rule 47 (print_statement -> PRINT word .)
    SETPC           reduce using rule 47 (print_statement -> PRINT word .)
    SETBC           reduce using rule 47 (print_statement -> PRINT word .)
    PENUP           reduce using rule 47 (print_statement -> PRINT word .)
    PENDOWN         reduce using rule 47 (print_statement -> PRINT word .)
    SHOW            reduce using rule 47 (print_statement -> PRINT word .)
    HIDE            reduce using rule 47 (print_statement -> PRINT word .)
    HOME            reduce using rule 47 (print_statement -> PRINT word .)
    CLEAN           reduce using rule 47 (print_statement -> PRINT word .)
    RESET           reduce using rule 47 (print_statement -> PRINT word .)
    REPEAT          reduce using rule 47 (print_statement -> PRINT word .)
    IF              reduce using rule 47 (print_statement -> PRINT word .)
    IFELSE          reduce using rule 47 (print_statement -> PRINT word .)
    WHILE           reduce using rule 47 (print_statement -> PRINT word .)
    DO              reduce using rule 47 (print_statement -> PRINT word .)
    MAKE            reduce using rule 47 (print_statement -> PRINT word .)
    TO              reduce using rule 47 (print_statement -> PRINT word .)
    STRING          reduce using rule 47 (print_statement -> PRINT word .)
    PRINT           reduce using rule 47 (print_statement -> PRINT word .)
    $end            reduce using rule 47 (print_statement -> PRINT word .)
    RBR             reduce using rule 47 (print_statement -> PRINT word .)
    END             reduce using rule 47 (print_statement -> PRINT word .)


state 75

    (48) print_statement -> PRINT expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 48 (print_statement -> PRINT expression .)
    FORWARD         reduce using rule 48 (print_statement -> PRINT expression .)
    BACK            reduce using rule 48 (print_statement -> PRINT expression .)
    RIGHT           reduce using rule 48 (print_statement -> PRINT expression .)
    LEFT            reduce using rule 48 (print_statement -> PRINT expression .)
    SETX            reduce using rule 48 (print_statement -> PRINT expression .)
    SETY            reduce using rule 48 (print_statement -> PRINT expression .)
    SETH            reduce using rule 48 (print_statement -> PRINT expression .)
    SPEED           reduce using rule 48 (print_statement -> PRINT expression .)
    SETPS           reduce using rule 48 (print_statement -> PRINT expression .)
    SETPC           reduce using rule 48 (print_statement -> PRINT expression .)
    SETBC           reduce using rule 48 (print_statement -> PRINT expression .)
    PENUP           reduce using rule 48 (print_statement -> PRINT expression .)
    PENDOWN         reduce using rule 48 (print_statement -> PRINT expression .)
    SHOW            reduce using rule 48 (print_statement -> PRINT expression .)
    HIDE            reduce using rule 48 (print_statement -> PRINT expression .)
    HOME            reduce using rule 48 (print_statement -> PRINT expression .)
    CLEAN           reduce using rule 48 (print_statement -> PRINT expression .)
    RESET           reduce using rule 48 (print_statement -> PRINT expression .)
    REPEAT          reduce using rule 48 (print_statement -> PRINT expression .)
    IF              reduce using rule 48 (print_statement -> PRINT expression .)
    IFELSE          reduce using rule 48 (print_statement -> PRINT expression .)
    WHILE           reduce using rule 48 (print_statement -> PRINT expression .)
    DO              reduce using rule 48 (print_statement -> PRINT expression .)
    MAKE            reduce using rule 48 (print_statement -> PRINT expression .)
    TO              reduce using rule 48 (print_statement -> PRINT expression .)
    STRING          reduce using rule 48 (print_statement -> PRINT expression .)
    PRINT           reduce using rule 48 (print_statement -> PRINT expression .)
    $end            reduce using rule 48 (print_statement -> PRINT expression .)
    RBR             reduce using rule 48 (print_statement -> PRINT expression .)
    END             reduce using rule 48 (print_statement -> PRINT expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 76

    (13) instruction -> SETXY LBR expression . COMMA expression RBR
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    COMMA           shift and go to state 103
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 77

    (56) expression -> expression TIMES . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 104
    name                           shift and go to state 46

state 78

    (57) expression -> expression DIVIDE . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 105
    name                           shift and go to state 46

state 79

    (58) expression -> expression PLUS . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 106
    name                           shift and go to state 46

state 80

    (59) expression -> expression MINUS . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 107
    name                           shift and go to state 46

state 81

    (60) expression -> expression POWER . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 108
    name                           shift and go to state 46

state 82

    (53) expression -> LPAR expression . RPAR
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    RPAR            shift and go to state 109
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 83

    (54) expression -> MINUS expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    TIMES           reduce using rule 54 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 54 (expression -> MINUS expression .)
    PLUS            reduce using rule 54 (expression -> MINUS expression .)
    MINUS           reduce using rule 54 (expression -> MINUS expression .)
    SETXY           reduce using rule 54 (expression -> MINUS expression .)
    FORWARD         reduce using rule 54 (expression -> MINUS expression .)
    BACK            reduce using rule 54 (expression -> MINUS expression .)
    RIGHT           reduce using rule 54 (expression -> MINUS expression .)
    LEFT            reduce using rule 54 (expression -> MINUS expression .)
    SETX            reduce using rule 54 (expression -> MINUS expression .)
    SETY            reduce using rule 54 (expression -> MINUS expression .)
    SETH            reduce using rule 54 (expression -> MINUS expression .)
    SPEED           reduce using rule 54 (expression -> MINUS expression .)
    SETPS           reduce using rule 54 (expression -> MINUS expression .)
    SETPC           reduce using rule 54 (expression -> MINUS expression .)
    SETBC           reduce using rule 54 (expression -> MINUS expression .)
    PENUP           reduce using rule 54 (expression -> MINUS expression .)
    PENDOWN         reduce using rule 54 (expression -> MINUS expression .)
    SHOW            reduce using rule 54 (expression -> MINUS expression .)
    HIDE            reduce using rule 54 (expression -> MINUS expression .)
    HOME            reduce using rule 54 (expression -> MINUS expression .)
    CLEAN           reduce using rule 54 (expression -> MINUS expression .)
    RESET           reduce using rule 54 (expression -> MINUS expression .)
    REPEAT          reduce using rule 54 (expression -> MINUS expression .)
    IF              reduce using rule 54 (expression -> MINUS expression .)
    IFELSE          reduce using rule 54 (expression -> MINUS expression .)
    WHILE           reduce using rule 54 (expression -> MINUS expression .)
    DO              reduce using rule 54 (expression -> MINUS expression .)
    MAKE            reduce using rule 54 (expression -> MINUS expression .)
    TO              reduce using rule 54 (expression -> MINUS expression .)
    STRING          reduce using rule 54 (expression -> MINUS expression .)
    PRINT           reduce using rule 54 (expression -> MINUS expression .)
    $end            reduce using rule 54 (expression -> MINUS expression .)
    RBR             reduce using rule 54 (expression -> MINUS expression .)
    END             reduce using rule 54 (expression -> MINUS expression .)
    LBR             reduce using rule 54 (expression -> MINUS expression .)
    GT              reduce using rule 54 (expression -> MINUS expression .)
    LT              reduce using rule 54 (expression -> MINUS expression .)
    GTE             reduce using rule 54 (expression -> MINUS expression .)
    LTE             reduce using rule 54 (expression -> MINUS expression .)
    EQUALS          reduce using rule 54 (expression -> MINUS expression .)
    NE              reduce using rule 54 (expression -> MINUS expression .)
    COMMA           reduce using rule 54 (expression -> MINUS expression .)
    RPAR            reduce using rule 54 (expression -> MINUS expression .)
    POWER           shift and go to state 81

  ! POWER           [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 78 ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 84

    (55) expression -> RANDOM expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 55 (expression -> RANDOM expression .)
    FORWARD         reduce using rule 55 (expression -> RANDOM expression .)
    BACK            reduce using rule 55 (expression -> RANDOM expression .)
    RIGHT           reduce using rule 55 (expression -> RANDOM expression .)
    LEFT            reduce using rule 55 (expression -> RANDOM expression .)
    SETX            reduce using rule 55 (expression -> RANDOM expression .)
    SETY            reduce using rule 55 (expression -> RANDOM expression .)
    SETH            reduce using rule 55 (expression -> RANDOM expression .)
    SPEED           reduce using rule 55 (expression -> RANDOM expression .)
    SETPS           reduce using rule 55 (expression -> RANDOM expression .)
    SETPC           reduce using rule 55 (expression -> RANDOM expression .)
    SETBC           reduce using rule 55 (expression -> RANDOM expression .)
    PENUP           reduce using rule 55 (expression -> RANDOM expression .)
    PENDOWN         reduce using rule 55 (expression -> RANDOM expression .)
    SHOW            reduce using rule 55 (expression -> RANDOM expression .)
    HIDE            reduce using rule 55 (expression -> RANDOM expression .)
    HOME            reduce using rule 55 (expression -> RANDOM expression .)
    CLEAN           reduce using rule 55 (expression -> RANDOM expression .)
    RESET           reduce using rule 55 (expression -> RANDOM expression .)
    REPEAT          reduce using rule 55 (expression -> RANDOM expression .)
    IF              reduce using rule 55 (expression -> RANDOM expression .)
    IFELSE          reduce using rule 55 (expression -> RANDOM expression .)
    WHILE           reduce using rule 55 (expression -> RANDOM expression .)
    DO              reduce using rule 55 (expression -> RANDOM expression .)
    MAKE            reduce using rule 55 (expression -> RANDOM expression .)
    TO              reduce using rule 55 (expression -> RANDOM expression .)
    STRING          reduce using rule 55 (expression -> RANDOM expression .)
    PRINT           reduce using rule 55 (expression -> RANDOM expression .)
    $end            reduce using rule 55 (expression -> RANDOM expression .)
    RBR             reduce using rule 55 (expression -> RANDOM expression .)
    END             reduce using rule 55 (expression -> RANDOM expression .)
    LBR             reduce using rule 55 (expression -> RANDOM expression .)
    GT              reduce using rule 55 (expression -> RANDOM expression .)
    LT              reduce using rule 55 (expression -> RANDOM expression .)
    GTE             reduce using rule 55 (expression -> RANDOM expression .)
    LTE             reduce using rule 55 (expression -> RANDOM expression .)
    EQUALS          reduce using rule 55 (expression -> RANDOM expression .)
    NE              reduce using rule 55 (expression -> RANDOM expression .)
    COMMA           reduce using rule 55 (expression -> RANDOM expression .)
    RPAR            reduce using rule 55 (expression -> RANDOM expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81

  ! TIMES           [ reduce using rule 55 (expression -> RANDOM expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> RANDOM expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> RANDOM expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> RANDOM expression .) ]
  ! POWER           [ reduce using rule 55 (expression -> RANDOM expression .) ]


state 85

    (70) name -> COLON STRING .

    TIMES           reduce using rule 70 (name -> COLON STRING .)
    DIVIDE          reduce using rule 70 (name -> COLON STRING .)
    PLUS            reduce using rule 70 (name -> COLON STRING .)
    MINUS           reduce using rule 70 (name -> COLON STRING .)
    POWER           reduce using rule 70 (name -> COLON STRING .)
    SETXY           reduce using rule 70 (name -> COLON STRING .)
    FORWARD         reduce using rule 70 (name -> COLON STRING .)
    BACK            reduce using rule 70 (name -> COLON STRING .)
    RIGHT           reduce using rule 70 (name -> COLON STRING .)
    LEFT            reduce using rule 70 (name -> COLON STRING .)
    SETX            reduce using rule 70 (name -> COLON STRING .)
    SETY            reduce using rule 70 (name -> COLON STRING .)
    SETH            reduce using rule 70 (name -> COLON STRING .)
    SPEED           reduce using rule 70 (name -> COLON STRING .)
    SETPS           reduce using rule 70 (name -> COLON STRING .)
    SETPC           reduce using rule 70 (name -> COLON STRING .)
    SETBC           reduce using rule 70 (name -> COLON STRING .)
    PENUP           reduce using rule 70 (name -> COLON STRING .)
    PENDOWN         reduce using rule 70 (name -> COLON STRING .)
    SHOW            reduce using rule 70 (name -> COLON STRING .)
    HIDE            reduce using rule 70 (name -> COLON STRING .)
    HOME            reduce using rule 70 (name -> COLON STRING .)
    CLEAN           reduce using rule 70 (name -> COLON STRING .)
    RESET           reduce using rule 70 (name -> COLON STRING .)
    REPEAT          reduce using rule 70 (name -> COLON STRING .)
    IF              reduce using rule 70 (name -> COLON STRING .)
    IFELSE          reduce using rule 70 (name -> COLON STRING .)
    WHILE           reduce using rule 70 (name -> COLON STRING .)
    DO              reduce using rule 70 (name -> COLON STRING .)
    MAKE            reduce using rule 70 (name -> COLON STRING .)
    TO              reduce using rule 70 (name -> COLON STRING .)
    STRING          reduce using rule 70 (name -> COLON STRING .)
    PRINT           reduce using rule 70 (name -> COLON STRING .)
    $end            reduce using rule 70 (name -> COLON STRING .)
    RBR             reduce using rule 70 (name -> COLON STRING .)
    END             reduce using rule 70 (name -> COLON STRING .)
    LBR             reduce using rule 70 (name -> COLON STRING .)
    GT              reduce using rule 70 (name -> COLON STRING .)
    LT              reduce using rule 70 (name -> COLON STRING .)
    GTE             reduce using rule 70 (name -> COLON STRING .)
    LTE             reduce using rule 70 (name -> COLON STRING .)
    EQUALS          reduce using rule 70 (name -> COLON STRING .)
    NE              reduce using rule 70 (name -> COLON STRING .)
    COMMA           reduce using rule 70 (name -> COLON STRING .)
    RPAR            reduce using rule 70 (name -> COLON STRING .)


state 86

    (69) word -> QUOTE STRING .

    SETXY           reduce using rule 69 (word -> QUOTE STRING .)
    FORWARD         reduce using rule 69 (word -> QUOTE STRING .)
    BACK            reduce using rule 69 (word -> QUOTE STRING .)
    RIGHT           reduce using rule 69 (word -> QUOTE STRING .)
    LEFT            reduce using rule 69 (word -> QUOTE STRING .)
    SETX            reduce using rule 69 (word -> QUOTE STRING .)
    SETY            reduce using rule 69 (word -> QUOTE STRING .)
    SETH            reduce using rule 69 (word -> QUOTE STRING .)
    SPEED           reduce using rule 69 (word -> QUOTE STRING .)
    SETPS           reduce using rule 69 (word -> QUOTE STRING .)
    SETPC           reduce using rule 69 (word -> QUOTE STRING .)
    SETBC           reduce using rule 69 (word -> QUOTE STRING .)
    PENUP           reduce using rule 69 (word -> QUOTE STRING .)
    PENDOWN         reduce using rule 69 (word -> QUOTE STRING .)
    SHOW            reduce using rule 69 (word -> QUOTE STRING .)
    HIDE            reduce using rule 69 (word -> QUOTE STRING .)
    HOME            reduce using rule 69 (word -> QUOTE STRING .)
    CLEAN           reduce using rule 69 (word -> QUOTE STRING .)
    RESET           reduce using rule 69 (word -> QUOTE STRING .)
    REPEAT          reduce using rule 69 (word -> QUOTE STRING .)
    IF              reduce using rule 69 (word -> QUOTE STRING .)
    IFELSE          reduce using rule 69 (word -> QUOTE STRING .)
    WHILE           reduce using rule 69 (word -> QUOTE STRING .)
    DO              reduce using rule 69 (word -> QUOTE STRING .)
    MAKE            reduce using rule 69 (word -> QUOTE STRING .)
    TO              reduce using rule 69 (word -> QUOTE STRING .)
    STRING          reduce using rule 69 (word -> QUOTE STRING .)
    PRINT           reduce using rule 69 (word -> QUOTE STRING .)
    $end            reduce using rule 69 (word -> QUOTE STRING .)
    RBR             reduce using rule 69 (word -> QUOTE STRING .)
    END             reduce using rule 69 (word -> QUOTE STRING .)
    INT             reduce using rule 69 (word -> QUOTE STRING .)
    FLOAT           reduce using rule 69 (word -> QUOTE STRING .)
    REPCOUNT        reduce using rule 69 (word -> QUOTE STRING .)
    LPAR            reduce using rule 69 (word -> QUOTE STRING .)
    MINUS           reduce using rule 69 (word -> QUOTE STRING .)
    RANDOM          reduce using rule 69 (word -> QUOTE STRING .)
    COLON           reduce using rule 69 (word -> QUOTE STRING .)


state 87

    (32) repeat_statement -> REPEAT expression LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 110
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 88

    (33) if_statement -> IF condition LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 111
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 89

    (63) condition -> expression GT . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 112
    name                           shift and go to state 46

state 90

    (64) condition -> expression LT . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 113
    name                           shift and go to state 46

state 91

    (65) condition -> expression GTE . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 114
    name                           shift and go to state 46

state 92

    (66) condition -> expression LTE . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 115
    name                           shift and go to state 46

state 93

    (67) condition -> expression EQUALS . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 116
    name                           shift and go to state 46

state 94

    (68) condition -> expression NE . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 117
    name                           shift and go to state 46

state 95

    (34) ifelse_statement -> IFELSE condition LBR . statement_list RBR LBR statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 118
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 96

    (35) while_statement -> WHILE condition LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 119
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 97

    (36) dowhile_statement -> DO LBR statement_list . RBR WHILE condition
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 120
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 98

    (37) variable_declaration -> MAKE word expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    SETXY           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    FORWARD         reduce using rule 37 (variable_declaration -> MAKE word expression .)
    BACK            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    RIGHT           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    LEFT            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETX            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETY            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETH            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SPEED           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETPS           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETPC           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SETBC           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    PENUP           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    PENDOWN         reduce using rule 37 (variable_declaration -> MAKE word expression .)
    SHOW            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    HIDE            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    HOME            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    CLEAN           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    RESET           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    REPEAT          reduce using rule 37 (variable_declaration -> MAKE word expression .)
    IF              reduce using rule 37 (variable_declaration -> MAKE word expression .)
    IFELSE          reduce using rule 37 (variable_declaration -> MAKE word expression .)
    WHILE           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    DO              reduce using rule 37 (variable_declaration -> MAKE word expression .)
    MAKE            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    TO              reduce using rule 37 (variable_declaration -> MAKE word expression .)
    STRING          reduce using rule 37 (variable_declaration -> MAKE word expression .)
    PRINT           reduce using rule 37 (variable_declaration -> MAKE word expression .)
    $end            reduce using rule 37 (variable_declaration -> MAKE word expression .)
    RBR             reduce using rule 37 (variable_declaration -> MAKE word expression .)
    END             reduce using rule 37 (variable_declaration -> MAKE word expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 99

    (38) procedure_definition -> TO STRING LBR . parameter_list RBR statement_list END
    (39) parameter_list -> . parameter_list COMMA parameter
    (40) parameter_list -> . parameter
    (41) parameter -> . name
    (42) parameter -> . empty
    (70) name -> . COLON STRING
    (71) empty -> .

    COLON           shift and go to state 51
    RBR             reduce using rule 71 (empty -> .)
    COMMA           reduce using rule 71 (empty -> .)

    parameter_list                 shift and go to state 121
    parameter                      shift and go to state 122
    name                           shift and go to state 123
    empty                          shift and go to state 124

state 100

    (43) procedure_call -> STRING LBR expression_list . RBR
    (44) expression_list -> expression_list . COMMA expression

    RBR             shift and go to state 125
    COMMA           shift and go to state 126


state 101

    (45) expression_list -> expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    RBR             reduce using rule 45 (expression_list -> expression .)
    COMMA           reduce using rule 45 (expression_list -> expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 102

    (46) expression_list -> empty .

    RBR             reduce using rule 46 (expression_list -> empty .)
    COMMA           reduce using rule 46 (expression_list -> empty .)


state 103

    (13) instruction -> SETXY LBR expression COMMA . expression RBR
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 127
    name                           shift and go to state 46

state 104

    (56) expression -> expression TIMES expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    TIMES           reduce using rule 56 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 56 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 56 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 56 (expression -> expression TIMES expression .)
    SETXY           reduce using rule 56 (expression -> expression TIMES expression .)
    FORWARD         reduce using rule 56 (expression -> expression TIMES expression .)
    BACK            reduce using rule 56 (expression -> expression TIMES expression .)
    RIGHT           reduce using rule 56 (expression -> expression TIMES expression .)
    LEFT            reduce using rule 56 (expression -> expression TIMES expression .)
    SETX            reduce using rule 56 (expression -> expression TIMES expression .)
    SETY            reduce using rule 56 (expression -> expression TIMES expression .)
    SETH            reduce using rule 56 (expression -> expression TIMES expression .)
    SPEED           reduce using rule 56 (expression -> expression TIMES expression .)
    SETPS           reduce using rule 56 (expression -> expression TIMES expression .)
    SETPC           reduce using rule 56 (expression -> expression TIMES expression .)
    SETBC           reduce using rule 56 (expression -> expression TIMES expression .)
    PENUP           reduce using rule 56 (expression -> expression TIMES expression .)
    PENDOWN         reduce using rule 56 (expression -> expression TIMES expression .)
    SHOW            reduce using rule 56 (expression -> expression TIMES expression .)
    HIDE            reduce using rule 56 (expression -> expression TIMES expression .)
    HOME            reduce using rule 56 (expression -> expression TIMES expression .)
    CLEAN           reduce using rule 56 (expression -> expression TIMES expression .)
    RESET           reduce using rule 56 (expression -> expression TIMES expression .)
    REPEAT          reduce using rule 56 (expression -> expression TIMES expression .)
    IF              reduce using rule 56 (expression -> expression TIMES expression .)
    IFELSE          reduce using rule 56 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 56 (expression -> expression TIMES expression .)
    DO              reduce using rule 56 (expression -> expression TIMES expression .)
    MAKE            reduce using rule 56 (expression -> expression TIMES expression .)
    TO              reduce using rule 56 (expression -> expression TIMES expression .)
    STRING          reduce using rule 56 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 56 (expression -> expression TIMES expression .)
    $end            reduce using rule 56 (expression -> expression TIMES expression .)
    RBR             reduce using rule 56 (expression -> expression TIMES expression .)
    END             reduce using rule 56 (expression -> expression TIMES expression .)
    LBR             reduce using rule 56 (expression -> expression TIMES expression .)
    GT              reduce using rule 56 (expression -> expression TIMES expression .)
    LT              reduce using rule 56 (expression -> expression TIMES expression .)
    GTE             reduce using rule 56 (expression -> expression TIMES expression .)
    LTE             reduce using rule 56 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 56 (expression -> expression TIMES expression .)
    NE              reduce using rule 56 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 56 (expression -> expression TIMES expression .)
    RPAR            reduce using rule 56 (expression -> expression TIMES expression .)
    POWER           shift and go to state 81

  ! POWER           [ reduce using rule 56 (expression -> expression TIMES expression .) ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 78 ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 105

    (57) expression -> expression DIVIDE expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    TIMES           reduce using rule 57 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 57 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 57 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETXY           reduce using rule 57 (expression -> expression DIVIDE expression .)
    FORWARD         reduce using rule 57 (expression -> expression DIVIDE expression .)
    BACK            reduce using rule 57 (expression -> expression DIVIDE expression .)
    RIGHT           reduce using rule 57 (expression -> expression DIVIDE expression .)
    LEFT            reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETX            reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETY            reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETH            reduce using rule 57 (expression -> expression DIVIDE expression .)
    SPEED           reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETPS           reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETPC           reduce using rule 57 (expression -> expression DIVIDE expression .)
    SETBC           reduce using rule 57 (expression -> expression DIVIDE expression .)
    PENUP           reduce using rule 57 (expression -> expression DIVIDE expression .)
    PENDOWN         reduce using rule 57 (expression -> expression DIVIDE expression .)
    SHOW            reduce using rule 57 (expression -> expression DIVIDE expression .)
    HIDE            reduce using rule 57 (expression -> expression DIVIDE expression .)
    HOME            reduce using rule 57 (expression -> expression DIVIDE expression .)
    CLEAN           reduce using rule 57 (expression -> expression DIVIDE expression .)
    RESET           reduce using rule 57 (expression -> expression DIVIDE expression .)
    REPEAT          reduce using rule 57 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 57 (expression -> expression DIVIDE expression .)
    IFELSE          reduce using rule 57 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 57 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 57 (expression -> expression DIVIDE expression .)
    MAKE            reduce using rule 57 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 57 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 57 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 57 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 57 (expression -> expression DIVIDE expression .)
    RBR             reduce using rule 57 (expression -> expression DIVIDE expression .)
    END             reduce using rule 57 (expression -> expression DIVIDE expression .)
    LBR             reduce using rule 57 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 57 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 57 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 57 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 57 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 57 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 57 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 57 (expression -> expression DIVIDE expression .)
    RPAR            reduce using rule 57 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 81

  ! POWER           [ reduce using rule 57 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 78 ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 106

    (58) expression -> expression PLUS expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 58 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 58 (expression -> expression PLUS expression .)
    SETXY           reduce using rule 58 (expression -> expression PLUS expression .)
    FORWARD         reduce using rule 58 (expression -> expression PLUS expression .)
    BACK            reduce using rule 58 (expression -> expression PLUS expression .)
    RIGHT           reduce using rule 58 (expression -> expression PLUS expression .)
    LEFT            reduce using rule 58 (expression -> expression PLUS expression .)
    SETX            reduce using rule 58 (expression -> expression PLUS expression .)
    SETY            reduce using rule 58 (expression -> expression PLUS expression .)
    SETH            reduce using rule 58 (expression -> expression PLUS expression .)
    SPEED           reduce using rule 58 (expression -> expression PLUS expression .)
    SETPS           reduce using rule 58 (expression -> expression PLUS expression .)
    SETPC           reduce using rule 58 (expression -> expression PLUS expression .)
    SETBC           reduce using rule 58 (expression -> expression PLUS expression .)
    PENUP           reduce using rule 58 (expression -> expression PLUS expression .)
    PENDOWN         reduce using rule 58 (expression -> expression PLUS expression .)
    SHOW            reduce using rule 58 (expression -> expression PLUS expression .)
    HIDE            reduce using rule 58 (expression -> expression PLUS expression .)
    HOME            reduce using rule 58 (expression -> expression PLUS expression .)
    CLEAN           reduce using rule 58 (expression -> expression PLUS expression .)
    RESET           reduce using rule 58 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 58 (expression -> expression PLUS expression .)
    IF              reduce using rule 58 (expression -> expression PLUS expression .)
    IFELSE          reduce using rule 58 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 58 (expression -> expression PLUS expression .)
    DO              reduce using rule 58 (expression -> expression PLUS expression .)
    MAKE            reduce using rule 58 (expression -> expression PLUS expression .)
    TO              reduce using rule 58 (expression -> expression PLUS expression .)
    STRING          reduce using rule 58 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 58 (expression -> expression PLUS expression .)
    $end            reduce using rule 58 (expression -> expression PLUS expression .)
    RBR             reduce using rule 58 (expression -> expression PLUS expression .)
    END             reduce using rule 58 (expression -> expression PLUS expression .)
    LBR             reduce using rule 58 (expression -> expression PLUS expression .)
    GT              reduce using rule 58 (expression -> expression PLUS expression .)
    LT              reduce using rule 58 (expression -> expression PLUS expression .)
    GTE             reduce using rule 58 (expression -> expression PLUS expression .)
    LTE             reduce using rule 58 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 58 (expression -> expression PLUS expression .)
    NE              reduce using rule 58 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 58 (expression -> expression PLUS expression .)
    RPAR            reduce using rule 58 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    POWER           shift and go to state 81

  ! TIMES           [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 107

    (59) expression -> expression MINUS expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    PLUS            reduce using rule 59 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 59 (expression -> expression MINUS expression .)
    SETXY           reduce using rule 59 (expression -> expression MINUS expression .)
    FORWARD         reduce using rule 59 (expression -> expression MINUS expression .)
    BACK            reduce using rule 59 (expression -> expression MINUS expression .)
    RIGHT           reduce using rule 59 (expression -> expression MINUS expression .)
    LEFT            reduce using rule 59 (expression -> expression MINUS expression .)
    SETX            reduce using rule 59 (expression -> expression MINUS expression .)
    SETY            reduce using rule 59 (expression -> expression MINUS expression .)
    SETH            reduce using rule 59 (expression -> expression MINUS expression .)
    SPEED           reduce using rule 59 (expression -> expression MINUS expression .)
    SETPS           reduce using rule 59 (expression -> expression MINUS expression .)
    SETPC           reduce using rule 59 (expression -> expression MINUS expression .)
    SETBC           reduce using rule 59 (expression -> expression MINUS expression .)
    PENUP           reduce using rule 59 (expression -> expression MINUS expression .)
    PENDOWN         reduce using rule 59 (expression -> expression MINUS expression .)
    SHOW            reduce using rule 59 (expression -> expression MINUS expression .)
    HIDE            reduce using rule 59 (expression -> expression MINUS expression .)
    HOME            reduce using rule 59 (expression -> expression MINUS expression .)
    CLEAN           reduce using rule 59 (expression -> expression MINUS expression .)
    RESET           reduce using rule 59 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 59 (expression -> expression MINUS expression .)
    IF              reduce using rule 59 (expression -> expression MINUS expression .)
    IFELSE          reduce using rule 59 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 59 (expression -> expression MINUS expression .)
    DO              reduce using rule 59 (expression -> expression MINUS expression .)
    MAKE            reduce using rule 59 (expression -> expression MINUS expression .)
    TO              reduce using rule 59 (expression -> expression MINUS expression .)
    STRING          reduce using rule 59 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 59 (expression -> expression MINUS expression .)
    $end            reduce using rule 59 (expression -> expression MINUS expression .)
    RBR             reduce using rule 59 (expression -> expression MINUS expression .)
    END             reduce using rule 59 (expression -> expression MINUS expression .)
    LBR             reduce using rule 59 (expression -> expression MINUS expression .)
    GT              reduce using rule 59 (expression -> expression MINUS expression .)
    LT              reduce using rule 59 (expression -> expression MINUS expression .)
    GTE             reduce using rule 59 (expression -> expression MINUS expression .)
    LTE             reduce using rule 59 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 59 (expression -> expression MINUS expression .)
    NE              reduce using rule 59 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 59 (expression -> expression MINUS expression .)
    RPAR            reduce using rule 59 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    POWER           shift and go to state 81

  ! TIMES           [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]


state 108

    (60) expression -> expression POWER expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    TIMES           reduce using rule 60 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 60 (expression -> expression POWER expression .)
    PLUS            reduce using rule 60 (expression -> expression POWER expression .)
    MINUS           reduce using rule 60 (expression -> expression POWER expression .)
    POWER           reduce using rule 60 (expression -> expression POWER expression .)
    SETXY           reduce using rule 60 (expression -> expression POWER expression .)
    FORWARD         reduce using rule 60 (expression -> expression POWER expression .)
    BACK            reduce using rule 60 (expression -> expression POWER expression .)
    RIGHT           reduce using rule 60 (expression -> expression POWER expression .)
    LEFT            reduce using rule 60 (expression -> expression POWER expression .)
    SETX            reduce using rule 60 (expression -> expression POWER expression .)
    SETY            reduce using rule 60 (expression -> expression POWER expression .)
    SETH            reduce using rule 60 (expression -> expression POWER expression .)
    SPEED           reduce using rule 60 (expression -> expression POWER expression .)
    SETPS           reduce using rule 60 (expression -> expression POWER expression .)
    SETPC           reduce using rule 60 (expression -> expression POWER expression .)
    SETBC           reduce using rule 60 (expression -> expression POWER expression .)
    PENUP           reduce using rule 60 (expression -> expression POWER expression .)
    PENDOWN         reduce using rule 60 (expression -> expression POWER expression .)
    SHOW            reduce using rule 60 (expression -> expression POWER expression .)
    HIDE            reduce using rule 60 (expression -> expression POWER expression .)
    HOME            reduce using rule 60 (expression -> expression POWER expression .)
    CLEAN           reduce using rule 60 (expression -> expression POWER expression .)
    RESET           reduce using rule 60 (expression -> expression POWER expression .)
    REPEAT          reduce using rule 60 (expression -> expression POWER expression .)
    IF              reduce using rule 60 (expression -> expression POWER expression .)
    IFELSE          reduce using rule 60 (expression -> expression POWER expression .)
    WHILE           reduce using rule 60 (expression -> expression POWER expression .)
    DO              reduce using rule 60 (expression -> expression POWER expression .)
    MAKE            reduce using rule 60 (expression -> expression POWER expression .)
    TO              reduce using rule 60 (expression -> expression POWER expression .)
    STRING          reduce using rule 60 (expression -> expression POWER expression .)
    PRINT           reduce using rule 60 (expression -> expression POWER expression .)
    $end            reduce using rule 60 (expression -> expression POWER expression .)
    RBR             reduce using rule 60 (expression -> expression POWER expression .)
    END             reduce using rule 60 (expression -> expression POWER expression .)
    LBR             reduce using rule 60 (expression -> expression POWER expression .)
    GT              reduce using rule 60 (expression -> expression POWER expression .)
    LT              reduce using rule 60 (expression -> expression POWER expression .)
    GTE             reduce using rule 60 (expression -> expression POWER expression .)
    LTE             reduce using rule 60 (expression -> expression POWER expression .)
    EQUALS          reduce using rule 60 (expression -> expression POWER expression .)
    NE              reduce using rule 60 (expression -> expression POWER expression .)
    COMMA           reduce using rule 60 (expression -> expression POWER expression .)
    RPAR            reduce using rule 60 (expression -> expression POWER expression .)

  ! TIMES           [ shift and go to state 77 ]
  ! DIVIDE          [ shift and go to state 78 ]
  ! PLUS            [ shift and go to state 79 ]
  ! MINUS           [ shift and go to state 80 ]
  ! POWER           [ shift and go to state 81 ]


state 109

    (53) expression -> LPAR expression RPAR .

    TIMES           reduce using rule 53 (expression -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 53 (expression -> LPAR expression RPAR .)
    PLUS            reduce using rule 53 (expression -> LPAR expression RPAR .)
    MINUS           reduce using rule 53 (expression -> LPAR expression RPAR .)
    POWER           reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETXY           reduce using rule 53 (expression -> LPAR expression RPAR .)
    FORWARD         reduce using rule 53 (expression -> LPAR expression RPAR .)
    BACK            reduce using rule 53 (expression -> LPAR expression RPAR .)
    RIGHT           reduce using rule 53 (expression -> LPAR expression RPAR .)
    LEFT            reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETX            reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETY            reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETH            reduce using rule 53 (expression -> LPAR expression RPAR .)
    SPEED           reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETPS           reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETPC           reduce using rule 53 (expression -> LPAR expression RPAR .)
    SETBC           reduce using rule 53 (expression -> LPAR expression RPAR .)
    PENUP           reduce using rule 53 (expression -> LPAR expression RPAR .)
    PENDOWN         reduce using rule 53 (expression -> LPAR expression RPAR .)
    SHOW            reduce using rule 53 (expression -> LPAR expression RPAR .)
    HIDE            reduce using rule 53 (expression -> LPAR expression RPAR .)
    HOME            reduce using rule 53 (expression -> LPAR expression RPAR .)
    CLEAN           reduce using rule 53 (expression -> LPAR expression RPAR .)
    RESET           reduce using rule 53 (expression -> LPAR expression RPAR .)
    REPEAT          reduce using rule 53 (expression -> LPAR expression RPAR .)
    IF              reduce using rule 53 (expression -> LPAR expression RPAR .)
    IFELSE          reduce using rule 53 (expression -> LPAR expression RPAR .)
    WHILE           reduce using rule 53 (expression -> LPAR expression RPAR .)
    DO              reduce using rule 53 (expression -> LPAR expression RPAR .)
    MAKE            reduce using rule 53 (expression -> LPAR expression RPAR .)
    TO              reduce using rule 53 (expression -> LPAR expression RPAR .)
    STRING          reduce using rule 53 (expression -> LPAR expression RPAR .)
    PRINT           reduce using rule 53 (expression -> LPAR expression RPAR .)
    $end            reduce using rule 53 (expression -> LPAR expression RPAR .)
    RBR             reduce using rule 53 (expression -> LPAR expression RPAR .)
    END             reduce using rule 53 (expression -> LPAR expression RPAR .)
    LBR             reduce using rule 53 (expression -> LPAR expression RPAR .)
    GT              reduce using rule 53 (expression -> LPAR expression RPAR .)
    LT              reduce using rule 53 (expression -> LPAR expression RPAR .)
    GTE             reduce using rule 53 (expression -> LPAR expression RPAR .)
    LTE             reduce using rule 53 (expression -> LPAR expression RPAR .)
    EQUALS          reduce using rule 53 (expression -> LPAR expression RPAR .)
    NE              reduce using rule 53 (expression -> LPAR expression RPAR .)
    COMMA           reduce using rule 53 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 53 (expression -> LPAR expression RPAR .)


state 110

    (32) repeat_statement -> REPEAT expression LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 128
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 111

    (33) if_statement -> IF condition LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 129
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 112

    (63) condition -> expression GT expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 63 (condition -> expression GT expression .)
    SETXY           reduce using rule 63 (condition -> expression GT expression .)
    FORWARD         reduce using rule 63 (condition -> expression GT expression .)
    BACK            reduce using rule 63 (condition -> expression GT expression .)
    RIGHT           reduce using rule 63 (condition -> expression GT expression .)
    LEFT            reduce using rule 63 (condition -> expression GT expression .)
    SETX            reduce using rule 63 (condition -> expression GT expression .)
    SETY            reduce using rule 63 (condition -> expression GT expression .)
    SETH            reduce using rule 63 (condition -> expression GT expression .)
    SPEED           reduce using rule 63 (condition -> expression GT expression .)
    SETPS           reduce using rule 63 (condition -> expression GT expression .)
    SETPC           reduce using rule 63 (condition -> expression GT expression .)
    SETBC           reduce using rule 63 (condition -> expression GT expression .)
    PENUP           reduce using rule 63 (condition -> expression GT expression .)
    PENDOWN         reduce using rule 63 (condition -> expression GT expression .)
    SHOW            reduce using rule 63 (condition -> expression GT expression .)
    HIDE            reduce using rule 63 (condition -> expression GT expression .)
    HOME            reduce using rule 63 (condition -> expression GT expression .)
    CLEAN           reduce using rule 63 (condition -> expression GT expression .)
    RESET           reduce using rule 63 (condition -> expression GT expression .)
    REPEAT          reduce using rule 63 (condition -> expression GT expression .)
    IF              reduce using rule 63 (condition -> expression GT expression .)
    IFELSE          reduce using rule 63 (condition -> expression GT expression .)
    WHILE           reduce using rule 63 (condition -> expression GT expression .)
    DO              reduce using rule 63 (condition -> expression GT expression .)
    MAKE            reduce using rule 63 (condition -> expression GT expression .)
    TO              reduce using rule 63 (condition -> expression GT expression .)
    STRING          reduce using rule 63 (condition -> expression GT expression .)
    PRINT           reduce using rule 63 (condition -> expression GT expression .)
    $end            reduce using rule 63 (condition -> expression GT expression .)
    RBR             reduce using rule 63 (condition -> expression GT expression .)
    END             reduce using rule 63 (condition -> expression GT expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 113

    (64) condition -> expression LT expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 64 (condition -> expression LT expression .)
    SETXY           reduce using rule 64 (condition -> expression LT expression .)
    FORWARD         reduce using rule 64 (condition -> expression LT expression .)
    BACK            reduce using rule 64 (condition -> expression LT expression .)
    RIGHT           reduce using rule 64 (condition -> expression LT expression .)
    LEFT            reduce using rule 64 (condition -> expression LT expression .)
    SETX            reduce using rule 64 (condition -> expression LT expression .)
    SETY            reduce using rule 64 (condition -> expression LT expression .)
    SETH            reduce using rule 64 (condition -> expression LT expression .)
    SPEED           reduce using rule 64 (condition -> expression LT expression .)
    SETPS           reduce using rule 64 (condition -> expression LT expression .)
    SETPC           reduce using rule 64 (condition -> expression LT expression .)
    SETBC           reduce using rule 64 (condition -> expression LT expression .)
    PENUP           reduce using rule 64 (condition -> expression LT expression .)
    PENDOWN         reduce using rule 64 (condition -> expression LT expression .)
    SHOW            reduce using rule 64 (condition -> expression LT expression .)
    HIDE            reduce using rule 64 (condition -> expression LT expression .)
    HOME            reduce using rule 64 (condition -> expression LT expression .)
    CLEAN           reduce using rule 64 (condition -> expression LT expression .)
    RESET           reduce using rule 64 (condition -> expression LT expression .)
    REPEAT          reduce using rule 64 (condition -> expression LT expression .)
    IF              reduce using rule 64 (condition -> expression LT expression .)
    IFELSE          reduce using rule 64 (condition -> expression LT expression .)
    WHILE           reduce using rule 64 (condition -> expression LT expression .)
    DO              reduce using rule 64 (condition -> expression LT expression .)
    MAKE            reduce using rule 64 (condition -> expression LT expression .)
    TO              reduce using rule 64 (condition -> expression LT expression .)
    STRING          reduce using rule 64 (condition -> expression LT expression .)
    PRINT           reduce using rule 64 (condition -> expression LT expression .)
    $end            reduce using rule 64 (condition -> expression LT expression .)
    RBR             reduce using rule 64 (condition -> expression LT expression .)
    END             reduce using rule 64 (condition -> expression LT expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 114

    (65) condition -> expression GTE expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 65 (condition -> expression GTE expression .)
    SETXY           reduce using rule 65 (condition -> expression GTE expression .)
    FORWARD         reduce using rule 65 (condition -> expression GTE expression .)
    BACK            reduce using rule 65 (condition -> expression GTE expression .)
    RIGHT           reduce using rule 65 (condition -> expression GTE expression .)
    LEFT            reduce using rule 65 (condition -> expression GTE expression .)
    SETX            reduce using rule 65 (condition -> expression GTE expression .)
    SETY            reduce using rule 65 (condition -> expression GTE expression .)
    SETH            reduce using rule 65 (condition -> expression GTE expression .)
    SPEED           reduce using rule 65 (condition -> expression GTE expression .)
    SETPS           reduce using rule 65 (condition -> expression GTE expression .)
    SETPC           reduce using rule 65 (condition -> expression GTE expression .)
    SETBC           reduce using rule 65 (condition -> expression GTE expression .)
    PENUP           reduce using rule 65 (condition -> expression GTE expression .)
    PENDOWN         reduce using rule 65 (condition -> expression GTE expression .)
    SHOW            reduce using rule 65 (condition -> expression GTE expression .)
    HIDE            reduce using rule 65 (condition -> expression GTE expression .)
    HOME            reduce using rule 65 (condition -> expression GTE expression .)
    CLEAN           reduce using rule 65 (condition -> expression GTE expression .)
    RESET           reduce using rule 65 (condition -> expression GTE expression .)
    REPEAT          reduce using rule 65 (condition -> expression GTE expression .)
    IF              reduce using rule 65 (condition -> expression GTE expression .)
    IFELSE          reduce using rule 65 (condition -> expression GTE expression .)
    WHILE           reduce using rule 65 (condition -> expression GTE expression .)
    DO              reduce using rule 65 (condition -> expression GTE expression .)
    MAKE            reduce using rule 65 (condition -> expression GTE expression .)
    TO              reduce using rule 65 (condition -> expression GTE expression .)
    STRING          reduce using rule 65 (condition -> expression GTE expression .)
    PRINT           reduce using rule 65 (condition -> expression GTE expression .)
    $end            reduce using rule 65 (condition -> expression GTE expression .)
    RBR             reduce using rule 65 (condition -> expression GTE expression .)
    END             reduce using rule 65 (condition -> expression GTE expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 115

    (66) condition -> expression LTE expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 66 (condition -> expression LTE expression .)
    SETXY           reduce using rule 66 (condition -> expression LTE expression .)
    FORWARD         reduce using rule 66 (condition -> expression LTE expression .)
    BACK            reduce using rule 66 (condition -> expression LTE expression .)
    RIGHT           reduce using rule 66 (condition -> expression LTE expression .)
    LEFT            reduce using rule 66 (condition -> expression LTE expression .)
    SETX            reduce using rule 66 (condition -> expression LTE expression .)
    SETY            reduce using rule 66 (condition -> expression LTE expression .)
    SETH            reduce using rule 66 (condition -> expression LTE expression .)
    SPEED           reduce using rule 66 (condition -> expression LTE expression .)
    SETPS           reduce using rule 66 (condition -> expression LTE expression .)
    SETPC           reduce using rule 66 (condition -> expression LTE expression .)
    SETBC           reduce using rule 66 (condition -> expression LTE expression .)
    PENUP           reduce using rule 66 (condition -> expression LTE expression .)
    PENDOWN         reduce using rule 66 (condition -> expression LTE expression .)
    SHOW            reduce using rule 66 (condition -> expression LTE expression .)
    HIDE            reduce using rule 66 (condition -> expression LTE expression .)
    HOME            reduce using rule 66 (condition -> expression LTE expression .)
    CLEAN           reduce using rule 66 (condition -> expression LTE expression .)
    RESET           reduce using rule 66 (condition -> expression LTE expression .)
    REPEAT          reduce using rule 66 (condition -> expression LTE expression .)
    IF              reduce using rule 66 (condition -> expression LTE expression .)
    IFELSE          reduce using rule 66 (condition -> expression LTE expression .)
    WHILE           reduce using rule 66 (condition -> expression LTE expression .)
    DO              reduce using rule 66 (condition -> expression LTE expression .)
    MAKE            reduce using rule 66 (condition -> expression LTE expression .)
    TO              reduce using rule 66 (condition -> expression LTE expression .)
    STRING          reduce using rule 66 (condition -> expression LTE expression .)
    PRINT           reduce using rule 66 (condition -> expression LTE expression .)
    $end            reduce using rule 66 (condition -> expression LTE expression .)
    RBR             reduce using rule 66 (condition -> expression LTE expression .)
    END             reduce using rule 66 (condition -> expression LTE expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 116

    (67) condition -> expression EQUALS expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 67 (condition -> expression EQUALS expression .)
    SETXY           reduce using rule 67 (condition -> expression EQUALS expression .)
    FORWARD         reduce using rule 67 (condition -> expression EQUALS expression .)
    BACK            reduce using rule 67 (condition -> expression EQUALS expression .)
    RIGHT           reduce using rule 67 (condition -> expression EQUALS expression .)
    LEFT            reduce using rule 67 (condition -> expression EQUALS expression .)
    SETX            reduce using rule 67 (condition -> expression EQUALS expression .)
    SETY            reduce using rule 67 (condition -> expression EQUALS expression .)
    SETH            reduce using rule 67 (condition -> expression EQUALS expression .)
    SPEED           reduce using rule 67 (condition -> expression EQUALS expression .)
    SETPS           reduce using rule 67 (condition -> expression EQUALS expression .)
    SETPC           reduce using rule 67 (condition -> expression EQUALS expression .)
    SETBC           reduce using rule 67 (condition -> expression EQUALS expression .)
    PENUP           reduce using rule 67 (condition -> expression EQUALS expression .)
    PENDOWN         reduce using rule 67 (condition -> expression EQUALS expression .)
    SHOW            reduce using rule 67 (condition -> expression EQUALS expression .)
    HIDE            reduce using rule 67 (condition -> expression EQUALS expression .)
    HOME            reduce using rule 67 (condition -> expression EQUALS expression .)
    CLEAN           reduce using rule 67 (condition -> expression EQUALS expression .)
    RESET           reduce using rule 67 (condition -> expression EQUALS expression .)
    REPEAT          reduce using rule 67 (condition -> expression EQUALS expression .)
    IF              reduce using rule 67 (condition -> expression EQUALS expression .)
    IFELSE          reduce using rule 67 (condition -> expression EQUALS expression .)
    WHILE           reduce using rule 67 (condition -> expression EQUALS expression .)
    DO              reduce using rule 67 (condition -> expression EQUALS expression .)
    MAKE            reduce using rule 67 (condition -> expression EQUALS expression .)
    TO              reduce using rule 67 (condition -> expression EQUALS expression .)
    STRING          reduce using rule 67 (condition -> expression EQUALS expression .)
    PRINT           reduce using rule 67 (condition -> expression EQUALS expression .)
    $end            reduce using rule 67 (condition -> expression EQUALS expression .)
    RBR             reduce using rule 67 (condition -> expression EQUALS expression .)
    END             reduce using rule 67 (condition -> expression EQUALS expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 117

    (68) condition -> expression NE expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    LBR             reduce using rule 68 (condition -> expression NE expression .)
    SETXY           reduce using rule 68 (condition -> expression NE expression .)
    FORWARD         reduce using rule 68 (condition -> expression NE expression .)
    BACK            reduce using rule 68 (condition -> expression NE expression .)
    RIGHT           reduce using rule 68 (condition -> expression NE expression .)
    LEFT            reduce using rule 68 (condition -> expression NE expression .)
    SETX            reduce using rule 68 (condition -> expression NE expression .)
    SETY            reduce using rule 68 (condition -> expression NE expression .)
    SETH            reduce using rule 68 (condition -> expression NE expression .)
    SPEED           reduce using rule 68 (condition -> expression NE expression .)
    SETPS           reduce using rule 68 (condition -> expression NE expression .)
    SETPC           reduce using rule 68 (condition -> expression NE expression .)
    SETBC           reduce using rule 68 (condition -> expression NE expression .)
    PENUP           reduce using rule 68 (condition -> expression NE expression .)
    PENDOWN         reduce using rule 68 (condition -> expression NE expression .)
    SHOW            reduce using rule 68 (condition -> expression NE expression .)
    HIDE            reduce using rule 68 (condition -> expression NE expression .)
    HOME            reduce using rule 68 (condition -> expression NE expression .)
    CLEAN           reduce using rule 68 (condition -> expression NE expression .)
    RESET           reduce using rule 68 (condition -> expression NE expression .)
    REPEAT          reduce using rule 68 (condition -> expression NE expression .)
    IF              reduce using rule 68 (condition -> expression NE expression .)
    IFELSE          reduce using rule 68 (condition -> expression NE expression .)
    WHILE           reduce using rule 68 (condition -> expression NE expression .)
    DO              reduce using rule 68 (condition -> expression NE expression .)
    MAKE            reduce using rule 68 (condition -> expression NE expression .)
    TO              reduce using rule 68 (condition -> expression NE expression .)
    STRING          reduce using rule 68 (condition -> expression NE expression .)
    PRINT           reduce using rule 68 (condition -> expression NE expression .)
    $end            reduce using rule 68 (condition -> expression NE expression .)
    RBR             reduce using rule 68 (condition -> expression NE expression .)
    END             reduce using rule 68 (condition -> expression NE expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 118

    (34) ifelse_statement -> IFELSE condition LBR statement_list . RBR LBR statement_list RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 130
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 119

    (35) while_statement -> WHILE condition LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 131
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 120

    (36) dowhile_statement -> DO LBR statement_list RBR . WHILE condition

    WHILE           shift and go to state 132


state 121

    (38) procedure_definition -> TO STRING LBR parameter_list . RBR statement_list END
    (39) parameter_list -> parameter_list . COMMA parameter

    RBR             shift and go to state 133
    COMMA           shift and go to state 134


state 122

    (40) parameter_list -> parameter .

    RBR             reduce using rule 40 (parameter_list -> parameter .)
    COMMA           reduce using rule 40 (parameter_list -> parameter .)


state 123

    (41) parameter -> name .

    RBR             reduce using rule 41 (parameter -> name .)
    COMMA           reduce using rule 41 (parameter -> name .)


state 124

    (42) parameter -> empty .

    RBR             reduce using rule 42 (parameter -> empty .)
    COMMA           reduce using rule 42 (parameter -> empty .)


state 125

    (43) procedure_call -> STRING LBR expression_list RBR .

    SETXY           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    FORWARD         reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    BACK            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    RIGHT           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    LEFT            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETX            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETY            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETH            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SPEED           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETPS           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETPC           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SETBC           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    PENUP           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    PENDOWN         reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    SHOW            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    HIDE            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    HOME            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    CLEAN           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    RESET           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    REPEAT          reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    IF              reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    IFELSE          reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    WHILE           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    DO              reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    MAKE            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    TO              reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    STRING          reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    PRINT           reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    $end            reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    RBR             reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)
    END             reduce using rule 43 (procedure_call -> STRING LBR expression_list RBR .)


state 126

    (44) expression_list -> expression_list COMMA . expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    expression                     shift and go to state 135
    name                           shift and go to state 46

state 127

    (13) instruction -> SETXY LBR expression COMMA expression . RBR
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    RBR             shift and go to state 136
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 128

    (32) repeat_statement -> REPEAT expression LBR statement_list RBR .

    SETXY           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    FORWARD         reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    BACK            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RIGHT           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    LEFT            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETX            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETY            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETH            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SPEED           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPS           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETPC           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SETBC           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENUP           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PENDOWN         reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    SHOW            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HIDE            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    HOME            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    CLEAN           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RESET           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    REPEAT          reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IF              reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    IFELSE          reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    WHILE           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    DO              reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    MAKE            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    TO              reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    STRING          reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    PRINT           reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    $end            reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    RBR             reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)
    END             reduce using rule 32 (repeat_statement -> REPEAT expression LBR statement_list RBR .)


state 129

    (33) if_statement -> IF condition LBR statement_list RBR .

    SETXY           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    FORWARD         reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    BACK            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    RIGHT           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    LEFT            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETX            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETY            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETH            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SPEED           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETPS           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETPC           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SETBC           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    PENUP           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    PENDOWN         reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    SHOW            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    HIDE            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    HOME            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    CLEAN           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    RESET           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    REPEAT          reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    IF              reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    IFELSE          reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    WHILE           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    DO              reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    MAKE            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    TO              reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    STRING          reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    PRINT           reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    $end            reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    RBR             reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)
    END             reduce using rule 33 (if_statement -> IF condition LBR statement_list RBR .)


state 130

    (34) ifelse_statement -> IFELSE condition LBR statement_list RBR . LBR statement_list RBR

    LBR             shift and go to state 137


state 131

    (35) while_statement -> WHILE condition LBR statement_list RBR .

    SETXY           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    FORWARD         reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    BACK            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    RIGHT           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    LEFT            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETX            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETY            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETH            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SPEED           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETPS           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETPC           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SETBC           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    PENUP           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    PENDOWN         reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    SHOW            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    HIDE            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    HOME            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    CLEAN           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    RESET           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    REPEAT          reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    IF              reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    IFELSE          reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    WHILE           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    DO              reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    MAKE            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    TO              reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    STRING          reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    PRINT           reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    $end            reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    RBR             reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)
    END             reduce using rule 35 (while_statement -> WHILE condition LBR statement_list RBR .)


state 132

    (36) dowhile_statement -> DO LBR statement_list RBR WHILE . condition
    (61) condition -> . TRUE
    (62) condition -> . FALSE
    (63) condition -> . expression GT expression
    (64) condition -> . expression LT expression
    (65) condition -> . expression GTE expression
    (66) condition -> . expression LTE expression
    (67) condition -> . expression EQUALS expression
    (68) condition -> . expression NE expression
    (49) expression -> . INT
    (50) expression -> . FLOAT
    (51) expression -> . name
    (52) expression -> . REPCOUNT
    (53) expression -> . LPAR expression RPAR
    (54) expression -> . MINUS expression
    (55) expression -> . RANDOM expression
    (56) expression -> . expression TIMES expression
    (57) expression -> . expression DIVIDE expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression POWER expression
    (70) name -> . COLON STRING

    TRUE            shift and go to state 65
    FALSE           shift and go to state 66
    INT             shift and go to state 44
    FLOAT           shift and go to state 45
    REPCOUNT        shift and go to state 47
    LPAR            shift and go to state 48
    MINUS           shift and go to state 49
    RANDOM          shift and go to state 50
    COLON           shift and go to state 51

    condition                      shift and go to state 138
    expression                     shift and go to state 67
    name                           shift and go to state 46

state 133

    (38) procedure_definition -> TO STRING LBR parameter_list RBR . statement_list END
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 139
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 134

    (39) parameter_list -> parameter_list COMMA . parameter
    (41) parameter -> . name
    (42) parameter -> . empty
    (70) name -> . COLON STRING
    (71) empty -> .

    COLON           shift and go to state 51
    RBR             reduce using rule 71 (empty -> .)
    COMMA           reduce using rule 71 (empty -> .)

    parameter                      shift and go to state 140
    name                           shift and go to state 123
    empty                          shift and go to state 124

state 135

    (44) expression_list -> expression_list COMMA expression .
    (56) expression -> expression . TIMES expression
    (57) expression -> expression . DIVIDE expression
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . POWER expression

    RBR             reduce using rule 44 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 44 (expression_list -> expression_list COMMA expression .)
    TIMES           shift and go to state 77
    DIVIDE          shift and go to state 78
    PLUS            shift and go to state 79
    MINUS           shift and go to state 80
    POWER           shift and go to state 81


state 136

    (13) instruction -> SETXY LBR expression COMMA expression RBR .

    SETXY           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    FORWARD         reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    BACK            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    RIGHT           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    LEFT            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETX            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETY            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETH            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SPEED           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPS           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETPC           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SETBC           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    PENUP           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    PENDOWN         reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    SHOW            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    HIDE            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    HOME            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    CLEAN           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    RESET           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    REPEAT          reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    IF              reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    IFELSE          reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    WHILE           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    DO              reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    MAKE            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    TO              reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    STRING          reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    PRINT           reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    $end            reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    RBR             reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)
    END             reduce using rule 13 (instruction -> SETXY LBR expression COMMA expression RBR .)


state 137

    (34) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR . statement_list RBR
    (1) statement_list -> . statement_list statement
    (2) statement_list -> . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement_list                 shift and go to state 141
    statement                      shift and go to state 2
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 138

    (36) dowhile_statement -> DO LBR statement_list RBR WHILE condition .

    SETXY           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    FORWARD         reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    BACK            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    RIGHT           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    LEFT            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETX            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETY            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETH            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SPEED           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETPS           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETPC           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SETBC           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    PENUP           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    PENDOWN         reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    SHOW            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    HIDE            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    HOME            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    CLEAN           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    RESET           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    REPEAT          reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    IF              reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    IFELSE          reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    WHILE           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    DO              reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    MAKE            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    TO              reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    STRING          reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    PRINT           reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    $end            reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    RBR             reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)
    END             reduce using rule 36 (dowhile_statement -> DO LBR statement_list RBR WHILE condition .)


state 139

    (38) procedure_definition -> TO STRING LBR parameter_list RBR statement_list . END
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    END             shift and go to state 142
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 140

    (39) parameter_list -> parameter_list COMMA parameter .

    RBR             reduce using rule 39 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 39 (parameter_list -> parameter_list COMMA parameter .)


state 141

    (34) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list . RBR
    (1) statement_list -> statement_list . statement
    (3) statement -> . instruction
    (4) statement -> . repeat_statement
    (5) statement -> . if_statement
    (6) statement -> . ifelse_statement
    (7) statement -> . while_statement
    (8) statement -> . dowhile_statement
    (9) statement -> . variable_declaration
    (10) statement -> . procedure_definition
    (11) statement -> . procedure_call
    (12) statement -> . print_statement
    (13) instruction -> . SETXY LBR expression COMMA expression RBR
    (14) instruction -> . FORWARD expression
    (15) instruction -> . BACK expression
    (16) instruction -> . RIGHT expression
    (17) instruction -> . LEFT expression
    (18) instruction -> . SETX expression
    (19) instruction -> . SETY expression
    (20) instruction -> . SETH expression
    (21) instruction -> . SPEED expression
    (22) instruction -> . SETPS expression
    (23) instruction -> . SETPC word
    (24) instruction -> . SETBC word
    (25) instruction -> . PENUP
    (26) instruction -> . PENDOWN
    (27) instruction -> . SHOW
    (28) instruction -> . HIDE
    (29) instruction -> . HOME
    (30) instruction -> . CLEAN
    (31) instruction -> . RESET
    (32) repeat_statement -> . REPEAT expression LBR statement_list RBR
    (33) if_statement -> . IF condition LBR statement_list RBR
    (34) ifelse_statement -> . IFELSE condition LBR statement_list RBR LBR statement_list RBR
    (35) while_statement -> . WHILE condition LBR statement_list RBR
    (36) dowhile_statement -> . DO LBR statement_list RBR WHILE condition
    (37) variable_declaration -> . MAKE word expression
    (38) procedure_definition -> . TO STRING LBR parameter_list RBR statement_list END
    (43) procedure_call -> . STRING LBR expression_list RBR
    (47) print_statement -> . PRINT word
    (48) print_statement -> . PRINT expression

    RBR             shift and go to state 143
    SETXY           shift and go to state 13
    FORWARD         shift and go to state 14
    BACK            shift and go to state 15
    RIGHT           shift and go to state 16
    LEFT            shift and go to state 17
    SETX            shift and go to state 18
    SETY            shift and go to state 19
    SETH            shift and go to state 20
    SPEED           shift and go to state 21
    SETPS           shift and go to state 22
    SETPC           shift and go to state 23
    SETBC           shift and go to state 24
    PENUP           shift and go to state 25
    PENDOWN         shift and go to state 26
    SHOW            shift and go to state 27
    HIDE            shift and go to state 28
    HOME            shift and go to state 29
    CLEAN           shift and go to state 30
    RESET           shift and go to state 31
    REPEAT          shift and go to state 32
    IF              shift and go to state 33
    IFELSE          shift and go to state 34
    WHILE           shift and go to state 35
    DO              shift and go to state 36
    MAKE            shift and go to state 37
    TO              shift and go to state 38
    STRING          shift and go to state 39
    PRINT           shift and go to state 40

    statement                      shift and go to state 41
    instruction                    shift and go to state 3
    repeat_statement               shift and go to state 4
    if_statement                   shift and go to state 5
    ifelse_statement               shift and go to state 6
    while_statement                shift and go to state 7
    dowhile_statement              shift and go to state 8
    variable_declaration           shift and go to state 9
    procedure_definition           shift and go to state 10
    procedure_call                 shift and go to state 11
    print_statement                shift and go to state 12

state 142

    (38) procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .

    SETXY           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    FORWARD         reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    BACK            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    RIGHT           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    LEFT            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETX            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETY            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETH            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SPEED           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETPS           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETPC           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SETBC           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    PENUP           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    PENDOWN         reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    SHOW            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    HIDE            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    HOME            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    CLEAN           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    RESET           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    REPEAT          reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    IF              reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    IFELSE          reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    WHILE           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    DO              reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    MAKE            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    TO              reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    STRING          reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    PRINT           reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    $end            reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    RBR             reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)
    END             reduce using rule 38 (procedure_definition -> TO STRING LBR parameter_list RBR statement_list END .)


state 143

    (34) ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .

    SETXY           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    FORWARD         reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    BACK            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RIGHT           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    LEFT            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETX            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETY            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETH            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SPEED           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPS           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETPC           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SETBC           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENUP           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PENDOWN         reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    SHOW            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HIDE            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    HOME            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    CLEAN           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RESET           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    REPEAT          reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IF              reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    IFELSE          reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    WHILE           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    DO              reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    MAKE            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    TO              reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    STRING          reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    PRINT           reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    $end            reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    RBR             reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)
    END             reduce using rule 34 (ifelse_statement -> IFELSE condition LBR statement_list RBR LBR statement_list RBR .)

